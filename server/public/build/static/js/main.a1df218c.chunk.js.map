{"version":3,"sources":["services/CommonTypes.ts","pages/Home.tsx","components/imgUploader.tsx","components/MovieForm.tsx","services/MovieService.ts","pages/movie/AddMovie.tsx","pages/movie/EditMovie.tsx","assets/default.jpg","components/MovieTable.tsx","redux/actions/MovieAction.ts","pages/movie/MovieList.tsx","components/BookTable.tsx","services/BookService.ts","redux/actions/BookAction.ts","pages/book/BookList.tsx","components/BookForm.tsx","pages/book/EditBook.tsx","pages/book/AddBook.tsx","pages/guard/ProtectedRoute.tsx","components/UserForm.tsx","services/UserService.ts","redux/actions/UserAction.ts","pages/user/UserLogin.tsx","pages/Layout.tsx","redux/reducers/BookReducer.ts","redux/reducers/MovieReducer.ts","redux/reducers/UserReducer.ts","redux/reducers/RootReducer.ts","redux/store.ts","App.tsx","index.tsx"],"names":["SwitchType","React","Component","up","state","showModal","this","props","value","PlusOutlined","style","color","uid","name","url","p","formData","FormData","append","filename","file","request","Request","action","method","body","fetch","then","resq","json","err","message","error","onChange","data","accept","listType","fileList","getFileList","customRequest","handleRequest","bind","onRemove","onPreview","setState","getUploadContent","visible","title","footer","onCancel","alt","width","src","layout","labelCol","span","wrapperCol","tailLayout","offset","MovieForm","onFinish","a","onSubmit","result","success","history","push","fields","movie","arrKey","Object","keys","arrValue","values","i","length","ato","console","log","padding","Item","label","rules","required","getValueFromEvent","e","noStyle","Group","options","initialValue","min","max","step","valuePropName","TextArea","rows","type","htmlType","withRouter","MovieService","axios","post","id","put","delete","get","condition","params","add","req","edit","undefined","getById","computedMatch","match","table","onLoad","prop","marginBottom","display","key","onKeyChange","target","onPressEnter","onSearch","icon","SearchOutlined","size","marginRight","onClick","dataIndex","render","poster","className","defaultImg","filterDropdown","getFilterDropdown","filterIcon","text","join","timeLong","isHot","record","checked","newVal","onSwitchChange","_id","isComing","isClassic","to","onConfirm","onDelete","okText","cancelText","total","current","page","pageSize","limit","pagination","rowKey","dataSource","columns","getColumns","getPageConfig","handleChange","loading","isLoading","saveMoviesAction","movies","payload","setLoadingAction","setConditionAction","deleteAction","changeSwitchAction","fetchMovie","dispatch","getState","curCondition","resp","deleteMovie","changeSwitch","MovieContainer","connect","MovieAction","newState","HOC","MovieTable","list","BookService","book","saveBookAction","books","fetchBook","getAll","deleteBook","BookContatiner","BookAction","BookTable","BookForm","entries","len","ProtectedRoute","user","component","rest","children","returnurl","location","pathname","isLogin","UserForm","res","placeholder","prefix","UserOutlined","direction","Password","iconRender","EyeTwoTone","EyeInvisibleOutlined","UserService","loginId","loginPwd","saveUserAction","registerAction","loginAction","login","whoamiAction","whoami","UserFormStore","pro","UserAction","pushState","Header","Layout","Sider","Content","_Layout","mode","theme","path","UserLogin","MovieList","exact","AddMovie","EditMovie","BookList","AddBook","EditBook","Home","defaultState","totalPage","saveBook","Math","ceil","setCondition","setLoading","filter","m","find","d","newBook","newData","map","saveMovie","newMovie","saveUser","setLogin","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a1df218c.chunk.js","sourcesContent":["export interface IResponseError{\r\n    err:string;\r\n    data:null;\r\n}\r\n\r\nexport interface IResponseData<T>{\r\n    err:\"\";\r\n    data:T\r\n}\r\n\r\nexport interface IResponsePageData<T>{\r\n    err:\"\";\r\n    data:T[];\r\n    total:number;\r\n}\r\n\r\nexport interface ISearchCondition{\r\n    page?:number;\r\n    limit?:number;\r\n    key?:string;\r\n}\r\n\r\nexport enum SwitchType {\r\n    isHot = \"isHot\",\r\n    isComing = \"isComing\",\r\n    isClassic = \"isClassic\"\r\n}","import React from \"react\";\r\nimport Uploader from \"../components/imgUploader\"\r\n// eslint-disable-next-line react/display-name\r\nexport default class extends React.Component {\r\n\r\n    // state = {\r\n    //     img:\"\"\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <h1>\r\n                欢迎使用电影管理系统\r\n            </h1>\r\n            // <Uploader \r\n            // curImgUrl={this.state.img}\r\n            // onChange={newUrl =>{\r\n            //     this.setState({\r\n            //         img:newUrl\r\n            //     })\r\n            // }}\r\n            // />\r\n        )\r\n    }\r\n}","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport { message, Modal, Upload } from \"antd\";\r\nimport { UploadFile } from \"antd/lib/upload/interface\";\r\nimport React from \"react\";\r\nimport { IResponseData, IResponseError } from \"../services/CommonTypes\";\r\n\r\ninterface IImgUploaderProps {\r\n    value?: string\r\n    onChange?: (imgUrl: string) => void\r\n}\r\n\r\ninterface IImgState {\r\n    showModal: boolean\r\n}\r\n\r\nexport default class up extends React.Component<IImgUploaderProps, IImgState> {\r\n\r\n    state: IImgState = {\r\n        showModal: false\r\n    }\r\n\r\n    private getUploadContent() {\r\n        if (this.props.value) {\r\n            return null;\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <PlusOutlined />\r\n                    <div style={{ color: \"gray\" }} >电影海报</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    private getFileList(): UploadFile[] {\r\n        if (this.props.value) {\r\n            return [\r\n                {\r\n                    uid: this.props.value,\r\n                    name: this.props.value,\r\n                    url: this.props.value\r\n\r\n                }\r\n            ]\r\n        }\r\n        return []\r\n    }\r\n\r\n    async handleRequest(p: any) {\r\n        // HTML5表达传输\r\n        /**\r\n         * 封装表单信息\r\n         * @ filename\r\n         * @ file\r\n         */\r\n        let formData = new FormData();\r\n        formData.append(p.filename, p.file);\r\n        // fetch api\r\n        /**\r\n         * 包装请求体\r\n         * @ action\r\n         */\r\n        const request = new Request(p.action, {\r\n            method: \"post\",\r\n            body: formData\r\n        })\r\n        const resq: IResponseData<string> | IResponseError = await fetch(request).then(resq => resq.json());\r\n        if (resq.err) {\r\n            message.error(resq.err);\r\n        } else {\r\n            if (this.props.onChange) {\r\n                this.props.onChange(resq.data!)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Upload\r\n                    action=\"/api/upload\"\r\n                    name=\"imgfile\"\r\n                    accept=\".jpg,.png,.gif\"\r\n                    listType=\"picture-card\"\r\n                    fileList={this.getFileList()}\r\n                    customRequest={this.handleRequest.bind(this)}\r\n                    onRemove={() =>{\r\n                        if(this.props.onChange){\r\n                            this.props.onChange(\"\")\r\n                        }}\r\n                    }\r\n                    onPreview={\r\n                        () => {\r\n                            this.setState({\r\n                                showModal: true\r\n                            })\r\n                        }\r\n                    }\r\n                >\r\n                    {this.getUploadContent()}\r\n                </Upload>\r\n                <Modal\r\n                    visible={this.state.showModal}\r\n                    title={this.props.value}\r\n                    footer={null}\r\n                    onCancel={() => {\r\n                        this.setState({\r\n                            showModal: false\r\n                        })\r\n                    }}\r\n                >\r\n                    <img alt=\"\" style={{ width: '100%' }} src={this.props.value} />\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import { Button, Checkbox, Form, Input, InputNumber, message, Switch } from \"antd\";\r\nimport React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { IMovie } from \"../services/MovieService\";\r\nimport ImgUploader from \"./imgUploader\";\r\n\r\ninterface IFormProp extends RouteComponentProps {\r\n    onSubmit: (movie: IMovie) => Promise<string>\r\n    movie?: IMovie\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: {\r\n        span: 19,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 5,\r\n        span: 19\r\n    }\r\n}\r\n\r\nclass MovieForm extends React.Component<IFormProp> {\r\n\r\n    render() {\r\n        const onFinish = async (value: IMovie) => {\r\n            if (value) {\r\n                const result = await this.props.onSubmit(value);\r\n                if (result) {\r\n                    message.error(result);\r\n                } else {\r\n                    message.success(\"提交成功\", 1, () => {\r\n                        // 1000ms后跳转页面\r\n                        this.props.history.push(\"/movie\")\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        const normFile = (e: any) => {\r\n            return e\r\n        };\r\n        const fields = [];\r\n        if(this.props.movie){\r\n            const arrKey = Object.keys(this.props.movie);\r\n            const arrValue = Object.values(this.props.movie);\r\n            for(let i = 0 ; i < arrKey.length ; i++){\r\n                const ato = {\r\n                    name:arrKey[i],\r\n                    value:arrValue[i]\r\n                }\r\n                fields.push(ato);\r\n            }\r\n            console.log(arrKey,arrValue,fields);\r\n        }\r\n        const areasOptions: string[] = ['中国大陆', '美国', '日本', '韩国'];\r\n        const typeOptions: string[] = ['喜剧', '悲剧', '合家欢', '战争', '科幻', '惊悚'];\r\n        return (\r\n            <Form\r\n                onFinish={onFinish}\r\n                {...layout}\r\n                style={{ width: \"400px\", padding: \"1em\" }}\r\n                fields={fields}\r\n            >\r\n                <Form.Item\r\n                    label=\"电影名称\"\r\n                    name=\"name\"\r\n                    rules={[{\r\n                        required: true,\r\n                        message: \"电影名称不能为空\"\r\n                    }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"封面\"\r\n                    name=\"poster\"\r\n                    getValueFromEvent={normFile} noStyle\r\n                >\r\n                    <ImgUploader />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"发行地区\"\r\n                    name=\"areas\"\r\n                    rules={[{\r\n                        required: true,\r\n                        message: \"请选择地区\"\r\n                    }]}\r\n                >\r\n                    <Checkbox.Group\r\n                        options={areasOptions}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"影片类型\"\r\n                    name=\"types\"\r\n                    rules={[{\r\n                        required: true,\r\n                        message: \"请选择电影类型\"\r\n                    }]}\r\n                >\r\n                    <Checkbox.Group\r\n                        options={typeOptions}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"时长\"\r\n                    name=\"timeLong\"\r\n                    initialValue={120}\r\n                    rules={[{\r\n                        required: true,\r\n                        message: \"请填写时长\"\r\n                    }]}\r\n                >\r\n                    <InputNumber\r\n                        min={30}\r\n                        max={240}\r\n                        step={10}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"正在热映\"\r\n                    name=\"isHot\"\r\n                    valuePropName=\"checked\"\r\n                    initialValue={false}\r\n                >\r\n                    <Switch\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"即将上映\"\r\n                    name=\"isComing\"\r\n                    valuePropName=\"checked\"\r\n                    initialValue={false}\r\n                >\r\n                    <Switch\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"经典影片\"\r\n                    valuePropName=\"checked\"\r\n                    name=\"isClassic\"\r\n                    initialValue={false}\r\n                >\r\n                    <Switch\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"影片描述\"\r\n                    name=\"description\"\r\n                >\r\n                    <Input.TextArea rows={4} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    {...tailLayout}\r\n                >\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(MovieForm);","import axios from \"axios\"\r\nimport { IResponseData, IResponseError, IResponsePageData, ISearchCondition } from \"./CommonTypes\";\r\n\r\nexport interface IMovie {\r\n    // 与服务器有相似对的类型声明可以使用webpack来处理\r\n    _id?:string;\r\n    name:string;\r\n    types:string[];\r\n    areas:string[];\r\n    timeLong:number;\r\n    isHot:boolean;\r\n    isComing:boolean;\r\n    isClassic:boolean;\r\n    description?:string;\r\n    poster?:string;\r\n}\r\n\r\nexport class MovieService {\r\n    // ajax-添加\r\n    public static async add(movie:IMovie):Promise<IResponseData<IMovie>|IResponseError>{\r\n        // 客户端：3001，服务端：3000\r\n        // 需要完整的请求路径，可以使用代理\r\n        // package.json中的“proxy”配置\r\n        const {data} = await axios.post(\"/api/movie\",movie)\r\n        return data;\r\n    }\r\n    // ajax-修改\r\n    public static async edit(id:string,movie:Partial<IMovie>):Promise<IResponseData<true>|IResponseError>{\r\n        const {data} = await axios.put(`/api/movie/${id}`,movie);\r\n        return data;\r\n    }\r\n    // ajax-删除\r\n    public static async delete(id:string):Promise<IResponseData<true>|IResponseError>{\r\n        const {data} = await axios.delete(`/api/movie/${id}`);\r\n        return data;\r\n    }\r\n    // ajax-查找一个\r\n    public static async getById(id:string):Promise<IResponseData<IMovie|null>>{\r\n        const {data} = await axios.get(`/api/movie/${id}`);\r\n        return data;\r\n    }\r\n    // ajax-查找多个\r\n    public static async get(condition:ISearchCondition):Promise<IResponsePageData<IMovie>>{\r\n        const {data} = await axios.get(`/api/movie/`,{\r\n            params:condition,\r\n        });\r\n        return data;\r\n    }\r\n}","import React from \"react\";\r\nimport MovieForm from \"../../components/MovieForm\";\r\nimport { MovieService } from \"../../services/MovieService\";\r\n\r\n// eslint-disable-next-line react/display-name\r\nexport default class extends React.Component {\r\n    render(){\r\n        return (\r\n            <MovieForm onSubmit={async (movie)=>{\r\n                const req = await MovieService.add(movie)\r\n                if(req.err){\r\n                    return req.err\r\n                }\r\n                return \"\"\r\n            }}/>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport MovieForm from \"../../components/MovieForm\";\r\nimport { IMovie, MovieService } from \"../../services/MovieService\";\r\n\r\ninterface IParams {\r\n    id:string\r\n}\r\n\r\ninterface EditPageState {\r\n    movie?:IMovie\r\n}\r\n\r\n/**\r\n * 获取地址栏中的params\r\n * @ 使用RouteComponentPropse<>泛型\r\n */\r\nclass edit extends React.Component<any,EditPageState>{\r\n    state:EditPageState = {\r\n        movie:undefined\r\n    }\r\n\r\n    async componentDidMount(){\r\n        console.log(this.props);\r\n        const result = await MovieService.getById(this.props.computedMatch.params.id)\r\n        if(result.data){\r\n            this.setState({\r\n                movie:result.data\r\n            })\r\n        }\r\n    }\r\n\r\n    // id从this.props.match.params.id获取\r\n    render(){\r\n        return (\r\n            <MovieForm \r\n            movie={this.state.movie}\r\n            onSubmit={async (movie)=>{\r\n                const req = await MovieService.edit(this.props.match.params.id,movie)\r\n                if(req.err){\r\n                    return req.err\r\n                }\r\n                return \"\"\r\n            }}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default edit; ","export default __webpack_public_path__ + \"static/media/default.d456d3ad.jpg\";","import React, { ReactNode, VoidFunctionComponent } from \"react\";\r\nimport { IMovieState } from \"../redux/reducers/MovieReducer\";\r\nimport { Button, Input, message, Popconfirm, Switch, Table  } from \"antd\";\r\nimport { ColumnsType, TablePaginationConfig } from \"antd/lib/table\";\r\nimport { IMovie } from \"../services/MovieService\";\r\nimport defaultImg from \"../assets/default.jpg\";\r\nimport { SwitchType } from \"../services/CommonTypes\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\nexport interface IMovieTableEvents {\r\n    /**\r\n     * 完成加载之后的事件\r\n     */\r\n    onLoad: () => void;\r\n    onSwitchChange: (type: SwitchType, newState: boolean, id: string) => void\r\n    onDelete:(id:string)=>Promise<void>,\r\n    onChange:(page:number)=>void\r\n    onKeyChange:(key:string)=>void\r\n    onSearch:()=>void\r\n}\r\n/**\r\n * @ 使用交叉类型定义返回值\r\n * @ 便于后期赋值方法\r\n */\r\nclass table extends React.Component<IMovieTableEvents & IMovieState> {\r\n\r\n    /**\r\n     * 生命周期 - 加载之后\r\n     */\r\n    componentDidMount() {\r\n        if (this.props.onLoad) {\r\n            this.props.onLoad();\r\n        }\r\n    }\r\n\r\n    private getFilterDropdown(prop:object):ReactNode{\r\n        return (\r\n            <div style={{padding:8}}>\r\n                <Input\r\n                    style={{width:188,marginBottom:8,display:'block'}}\r\n                    value={this.props.condition.key}\r\n                    onChange={e=>this.props.onKeyChange(e.target.value)}\r\n                    onPressEnter={this.props.onSearch}\r\n                />\r\n                <Button\r\n                    type=\"primary\"\r\n                    icon={<SearchOutlined />}\r\n                    size=\"small\"\r\n                    style={{width:90,marginRight:8}}\r\n                    onClick={this.props.onSearch}\r\n                >\r\n                    搜索\r\n                </Button>\r\n                <Button\r\n                    size=\"small\"\r\n                    style={{width:90}}\r\n                    onClick={()=>{\r\n                        this.props.onKeyChange(\"\");\r\n                        this.props.onSearch()\r\n                    }}\r\n                >\r\n                    重置\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 配置columns属性\r\n     * @ title  :string 名称\r\n     * @ dataIndex  :string 数据\r\n     * @ render  :function渲染\r\n     */\r\n    private getColumns(): ColumnsType<IMovie> {\r\n        return [\r\n            {\r\n                title: \"封面\",\r\n                dataIndex: \"poster\",\r\n                render(poster) {\r\n                    if (poster) {\r\n                        return (<img alt=\"\" className=\"tablePoster\" src={poster} />)\r\n                    } else {\r\n                        return (<img alt=\"\" className=\"tablePoster\" src={defaultImg} />)\r\n                    }\r\n                }\r\n            },\r\n            { \r\n                title: \"名称\", \r\n                dataIndex: \"name\",\r\n                filterDropdown:this.getFilterDropdown.bind(this),\r\n                filterIcon:<SearchOutlined />\r\n            },\r\n            {\r\n                title: \"类型\",\r\n                dataIndex: \"types\",\r\n                render(text: string[]) {\r\n                    return text.join(\"，\")\r\n                }\r\n            },\r\n            {\r\n                title: \"地区\",\r\n                dataIndex: \"areas\",\r\n                render(text: string[]) {\r\n                    return text.join(\"，\")\r\n                }\r\n            },\r\n            {\r\n                title: \"时长\",\r\n                dataIndex: \"timeLong\",\r\n                render(timeLong: string) {\r\n                    return `${timeLong}分钟`\r\n                }\r\n            },\r\n            {\r\n                title: \"是否热映\",\r\n                dataIndex: \"isHot\",\r\n                render: (isHot: boolean, record) => {\r\n                    return <Switch checked={isHot} onChange={(newVal) => {\r\n                        this.props.onSwitchChange(SwitchType.isHot, newVal, record._id!);\r\n                    }} />\r\n                }\r\n            },\r\n            {\r\n                title: \"即将上映\",\r\n                dataIndex: \"isComing\",\r\n                render: (isComing: boolean, record) => {\r\n                    return <Switch checked={isComing} onChange={(newVal) => {\r\n                        this.props.onSwitchChange(SwitchType.isComing, newVal, record._id!);\r\n                    }} />\r\n                }\r\n            },\r\n            {\r\n                title: \"经典影片\",\r\n                dataIndex: \"isClassic\",\r\n                render: (isClassic: boolean, record) => {\r\n                    return <Switch checked={isClassic} onChange={(newVal) => {\r\n                        this.props.onSwitchChange(SwitchType.isClassic, newVal, record._id!);\r\n                    }} />\r\n                }\r\n            },\r\n            {\r\n                title: \"操作\",\r\n                dataIndex: \"_id\",\r\n                render: (id) => {\r\n                    return (\r\n                        <div>\r\n                            <NavLink to={`/movie/edit/${id}`}>\r\n                                <Button type=\"primary\" size=\"small\">编辑</Button>\r\n                            </NavLink>\r\n                            <Popconfirm \r\n                            title=\"是否确定删除该影片？\" \r\n                            onConfirm={\r\n                            async ()=>{\r\n                                await this.props.onDelete(id)\r\n                                message.success(\"删除成功\")\r\n                            }} okText=\"确定\" cancelText=\"取消\">\r\n                            <Button type=\"text\" size=\"small\">删除</Button>\r\n                            </Popconfirm>\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n        ]\r\n    }\r\n\r\n    getPageConfig():TablePaginationConfig|false{\r\n        if(this.props.total === 0){\r\n            return false;\r\n        }\r\n        return {\r\n            current:this.props.condition.page,\r\n            pageSize:this.props.condition.limit,\r\n            total:this.props.total,\r\n        }\r\n    }\r\n\r\n    handleChange(pagination:TablePaginationConfig){\r\n        this.props.onChange(pagination.current!);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Table \r\n            rowKey=\"_id\" \r\n            dataSource={this.props.data} \r\n            columns={this.getColumns()}\r\n            pagination={this.getPageConfig()}\r\n            onChange={this.handleChange.bind(this)}\r\n            loading={this.props.isLoading}\r\n            ></Table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default table;","// action的创建函数\r\n\r\nimport { ISearchCondition, SwitchType } from \"../../services/CommonTypes\";\r\nimport { IMovie, MovieService } from \"../../services/MovieService\";\r\nimport { IAction } from \"./ActionTypes\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { IRootState } from \"../reducers/RootReducer\";\r\n/**\r\n * 根据IAction来制作类型SaveMoviesAction\r\n */\r\nexport type SaveMoviesAction = IAction<\"movie_save\", {\r\n    movies: IMovie[];\r\n    total: number;\r\n}>;\r\n/**\r\n * 保存电影数据\r\n * @param movies 电影数组 \r\n * @param total 电影总数\r\n */\r\nfunction saveMoviesAction(movies: IMovie[], total: number): SaveMoviesAction {\r\n    return {\r\n        type: \"movie_save\",\r\n        payload: {\r\n            movies,\r\n            total\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * 根据IAction来制作类型SaveLoadingAction\r\n */\r\nexport type SetLoadingAction = IAction<\"movie_setLoading\",boolean>;\r\n/**\r\n * 设置状态是否加载行为\r\n * @param isLoading 是否加载 \r\n */\r\nfunction setLoadingAction(isLoading:boolean):SetLoadingAction{\r\n    return {\r\n        type:\"movie_setLoading\",\r\n        payload: isLoading\r\n    }\r\n}\r\n\r\n/**\r\n * 根据IAction来制作类型SetConditionAction\r\n */\r\nexport type SetConditionAction = IAction<\"movie_setCondition\",ISearchCondition>\r\n/**\r\n * 设置查询条件行为\r\n * @param condition 查询条件\r\n */\r\nfunction setConditionAction(condition:ISearchCondition):SetConditionAction{\r\n    return {\r\n        type:\"movie_setCondition\",\r\n        payload:condition\r\n    }\r\n}\r\n\r\n/**\r\n * 根据IAction来制作类型DeleteAction\r\n */\r\nexport type DeleteAction = IAction<\"movie_delete\",string>\r\n\r\n/**\r\n * 删除电影行为\r\n * @param id 电影的_id属性\r\n */\r\nfunction deleteAction(id:string):DeleteAction{\r\n    return {\r\n        type:\"movie_delete\",\r\n        payload:id\r\n    }\r\n}\r\n/**\r\n * 根据IAction来制作类型MovieChangeSwitchAction\r\n */\r\nexport type MovieChangeSwitchAction = IAction<\"movie_switch\",{\r\n    type:SwitchType,\r\n    newVal:boolean,\r\n    id:string\r\n}>\r\n/**\r\n * 更改布尔值行为\r\n * @param type 目标类型\r\n * @param newVal 改变后的值\r\n * @param id 电影id\r\n */\r\nfunction changeSwitchAction(type:SwitchType,newVal:boolean,id:string):MovieChangeSwitchAction{\r\n    return {\r\n        type:\"movie_switch\",\r\n        payload:{\r\n            type,\r\n            newVal,\r\n            id\r\n        }\r\n    }\r\n}\r\n/**\r\n * 可辨识的联合\r\n */\r\nexport type MovieAction = MovieChangeSwitchAction|SaveMoviesAction|SetConditionAction|SetLoadingAction|DeleteAction\r\n\r\n// 副作用处理thunk\r\n/**\r\n * 副作用-通过条件从服务器中获取电影数组\r\n * @param condition 查询条件\r\n */\r\nfunction fetchMovie(condition:ISearchCondition)\r\n:ThunkAction<Promise<void>,IRootState,any,MovieAction>{\r\n    return async (dispatch,getState)=>{\r\n        // 1. 设置加载状态\r\n        dispatch(setLoadingAction(true));\r\n        // 2. 设置条件\r\n        dispatch(setConditionAction(condition));\r\n        // 3. 获取服务器数据\r\n        const curCondition = getState().movie.condition\r\n        const resp = await MovieService.get(curCondition)\r\n        // 4. 更改仓库数据\r\n        dispatch(saveMoviesAction(resp.data,resp.total))\r\n        // 5. 关闭加载状态\r\n        dispatch(setLoadingAction(false));\r\n    }\r\n}\r\n/**\r\n * 通过id删除电影\r\n * @param id 电影的_id\r\n */\r\nfunction deleteMovie(id:string)\r\n:ThunkAction<Promise<void>,IRootState,any,MovieAction>{\r\n    return async (dispatch)=>{\r\n        // 1. 设置加载状态\r\n        dispatch(setLoadingAction(true));\r\n        // 2. 删除数据\r\n        await MovieService.delete(id)\r\n        // 3. 更改仓库数据\r\n        dispatch(deleteAction(id))\r\n        // 4. 关闭加载状态\r\n        dispatch(setLoadingAction(false));\r\n    }\r\n}\r\n\r\nfunction changeSwitch(type:SwitchType,newVal:boolean,id:string)\r\n:ThunkAction<Promise<void>,IRootState,any,MovieAction>{\r\n    return async (dispatch)=>{\r\n        // 1. 设置加载状态\r\n        dispatch(setLoadingAction(true));\r\n        // 2. 更改仓库状态\r\n        dispatch(changeSwitchAction(type,newVal,id));\r\n        // 3. 在服务器中修改\r\n        await MovieService.edit(id,{\r\n            [type]:newVal\r\n        })\r\n        // 4. 关闭加载状态\r\n        dispatch(setLoadingAction(false));\r\n    }\r\n}\r\n\r\n\r\nexport default {\r\n    saveMoviesAction,\r\n    setLoadingAction,\r\n    setConditionAction,\r\n    deleteAction,\r\n    fetchMovie,\r\n    deleteMovie,\r\n    changeSwitch,\r\n    changeSwitchAction,\r\n};\r\n","import React, { Dispatch } from \"react\";\r\nimport MovieTable, { IMovieTableEvents} from \"../../components/MovieTable\";\r\nimport { connect } from \"react-redux\";\r\nimport { IRootState } from \"../../redux/reducers/RootReducer\";\r\nimport MovieAction from \"../../redux/actions/MovieAction\";\r\nimport { IMovieState } from \"../../redux/reducers/MovieReducer\";\r\n\r\n/**\r\n * react-redux的使用 \r\n * 1. 定义一个函数，返回电影状态\r\n * @param state 仓库的状态\r\n */\r\nfunction mapStateToProps(state:IRootState):IMovieState{\r\n    return state.movie;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch:Dispatch<any>):IMovieTableEvents{\r\n    return {\r\n        onLoad(){\r\n            dispatch(MovieAction.fetchMovie({\r\n                page:1,\r\n                limit:10,\r\n                key:\"\"\r\n            }))\r\n        },\r\n        onSwitchChange(type, newState, id){\r\n            dispatch(MovieAction.changeSwitch(type,newState,id))\r\n        },\r\n        async onDelete(id){\r\n            dispatch(MovieAction.deleteMovie(id))\r\n        },\r\n        onChange(page){\r\n            dispatch(MovieAction.fetchMovie({\r\n                page,\r\n            }))\r\n        },\r\n        onKeyChange(key){\r\n            dispatch(MovieAction.setConditionAction({\r\n                key,\r\n            }))\r\n        },\r\n        onSearch(){\r\n            dispatch(MovieAction.fetchMovie({\r\n                // 细节搜索后需要会到第一页 否则容易出bug\r\n                page:1,\r\n            }))\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * react-redux的使用\r\n * 2. HOC高阶函数\r\n * @ 由react-redux返回的高阶函数\r\n * @ 传入组件然后返回一个新的组件\r\n */\r\nconst HOC = connect(mapStateToProps,mapDispatchToProps);\r\n/**\r\n * react-redux的使用\r\n * 3. 通过高阶函数HOC封装旧组件以及特定规则，然后返回新组件\r\n */\r\nconst MovieContainer = HOC(MovieTable);\r\n\r\nclass list extends React.Component {\r\n    render(){\r\n        return (\r\n            <MovieContainer/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default list;\r\n\r\n// 情形1 - 仓库里面有数据，但没有界面\r\n// 情形2 - MovieTable组件有界面，但是没有数据\r\n// 解决方法 - 使用react-redux库","import { SearchOutlined } from \"@ant-design/icons\";\r\nimport { Button, Input, message, Popconfirm, Switch } from \"antd\";\r\nimport Table, { ColumnsType, TablePaginationConfig } from \"antd/lib/table\";\r\nimport React, { ReactNode } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { IBookState } from \"../redux/reducers/BookReducer\";\r\nimport { IBook } from \"../services/BookService\";\r\nimport { SwitchType } from \"../services/CommonTypes\";\r\nimport defaultImg from \"../assets/default.jpg\";\r\n\r\nexport interface IBookTableEvents {\r\n    onLoad: () => void;\r\n    onKeyChange: (key: string) => void;\r\n    onChange: (page: number) => void;\r\n    onSearch: () => void;\r\n    onSwitchChange: (type: SwitchType, newState: boolean, id: string) => void\r\n    onDelete: (id: string) => Promise<void>\r\n}\r\n\r\nclass table extends React.Component<IBookTableEvents & IBookState>{\r\n    componentDidMount() {\r\n        if (this.props.onLoad) {\r\n            this.props.onLoad();\r\n        }\r\n    }\r\n    private getFilterDropdown(prop: object): ReactNode {\r\n        return (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n                    value={this.props.condition.key}\r\n                    onChange={e => this.props.onKeyChange(e.target.value)}\r\n                    onPressEnter={this.props.onSearch}\r\n                />\r\n                <Button\r\n                    type=\"primary\"\r\n                    icon={<SearchOutlined />}\r\n                    size=\"small\"\r\n                    style={{ width: 90, marginRight: 8 }}\r\n                    onClick={this.props.onSearch}\r\n                >\r\n                    搜索\r\n                </Button>\r\n                <Button\r\n                    size=\"small\"\r\n                    style={{ width: 90 }}\r\n                    onClick={() => {\r\n                        this.props.onKeyChange(\"\");\r\n                        this.props.onSearch()\r\n                    }}\r\n                >\r\n                    重置\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private getColumns(): ColumnsType<IBook> {\r\n        return [\r\n            {\r\n                title: \"封面\",\r\n                dataIndex: \"poster\",\r\n                render(poster) {\r\n                    if (poster) {\r\n                        return (\r\n                            <img src={poster} alt=\"\" className=\"tablePoster\" />\r\n                        )\r\n                    } else {\r\n                        return (\r\n                            <img src={defaultImg} alt=\"\" className=\"tablePoster\" />\r\n                        )\r\n                    }\r\n                }\r\n            }, {\r\n                title: \"名称\",\r\n                dataIndex: \"name\",\r\n                filterDropdown: this.getFilterDropdown.bind(this),\r\n                filterIcon: <SearchOutlined />\r\n            }, {\r\n                title: \"作者\",\r\n                dataIndex: \"author\",\r\n                render(text: string) {\r\n                    return text;\r\n                }\r\n            }, {\r\n                title: \"是否热映\",\r\n                dataIndex: \"isHot\",\r\n                render: (isHot: boolean, record) => {\r\n                    return <Switch\r\n                        checked={isHot}\r\n                        onChange={(newVal) => {\r\n                            console.log(newVal)\r\n                            this.props.onSwitchChange(SwitchType.isHot, newVal, record._id!);\r\n                        }}\r\n                    />\r\n                }\r\n            }, {\r\n                title: \"即将上映\",\r\n                dataIndex: \"isComing\",\r\n                render: (isComing: boolean, record) => {\r\n                    return <Switch\r\n                        checked={isComing}\r\n                        onChange={(newVal) => {\r\n                            console.log(newVal)\r\n                            this.props.onSwitchChange(SwitchType.isComing, newVal, record._id!);\r\n                        }}\r\n                    />\r\n                }\r\n            }, {\r\n                title: \"经典影片\",\r\n                dataIndex: \"isClassic\",\r\n                render: (isClassic: boolean, record) => {\r\n                    return <Switch\r\n                        checked={isClassic}\r\n                        onChange={(newVal) => {\r\n                            console.log(newVal)\r\n                            this.props.onSwitchChange(SwitchType.isClassic, newVal, record._id!);\r\n                        }}\r\n                    />\r\n                }\r\n            }, {\r\n                title: \"操作\",\r\n                dataIndex: \"_id\",\r\n                render: (id) => {\r\n                    return (\r\n                        <div>\r\n                            <NavLink\r\n                                to={`/book/edit/${id}`}\r\n                            >\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    size=\"small\"\r\n                                >\r\n                                    编辑\r\n                                </Button>\r\n                            </NavLink>\r\n                            <Popconfirm\r\n                                title=\"是否删除该书目？\"\r\n                                onConfirm={\r\n                                    async () => {\r\n                                        await this.props.onDelete(id)\r\n                                        message.success(\"删除成功\")\r\n                                    }\r\n                                }\r\n                                okText=\"确定\"\r\n                                cancelText=\"取消\"\r\n                            >\r\n                                <Button\r\n                                    type=\"text\"\r\n                                    size=\"small\"\r\n                                >删除</Button>\r\n                            </Popconfirm>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        ]\r\n    }\r\n\r\n    getPageConfig(): TablePaginationConfig | false {\r\n        if (this.props.total === 0) {\r\n            return false;\r\n        }\r\n        return {\r\n            current: this.props.condition.page,\r\n            pageSize: this.props.condition.limit,\r\n            total: this.props.total,\r\n        }\r\n    }\r\n\r\n    handleChange(pagination: TablePaginationConfig) {\r\n        this.props.onChange(pagination.current!);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Table\r\n                rowKey=\"_id\"\r\n                dataSource={this.props.data}\r\n                columns={this.getColumns()}\r\n                pagination={this.getPageConfig()}\r\n                onChange={this.handleChange.bind(this)}\r\n                loading={this.props.isLoading}\r\n            >\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default table;","import axios from \"axios\";\r\nimport { IResponseData, IResponseError, IResponsePageData, ISearchCondition } from \"./CommonTypes\";\r\n\r\nexport interface IBook {\r\n    _id?:string;\r\n    name:string;\r\n    types:string[];\r\n    author:string;\r\n    isHot:boolean;\r\n    isComing:boolean;\r\n    isClassic:boolean;\r\n    description?:string;\r\n    poster?:string;\r\n}\r\n\r\nexport class BookService {\r\n    /**\r\n     * 添加\r\n     * @param book 书本数据\r\n     */\r\n    public static async add(book:IBook):Promise<IResponseData<IBook>|IResponseError>{\r\n        const {data} = await axios.post(\"/api/book\",book);\r\n        return data\r\n    }\r\n    /**\r\n     * 修改\r\n     * @param id 书目id\r\n     * @param book 书本修改数据\r\n     */\r\n    public static async edit(id:string,book:Partial<IBook>):Promise<IResponseData<true>|IResponseError>{\r\n        const {data} = await axios.put(`/api/book/${id}`,book);\r\n        return data;\r\n    }\r\n    /**\r\n     * 删除\r\n     * @param id 书目id\r\n     */\r\n    public static async delete(id:string):Promise<IResponseData<IBook>|IResponseError>{\r\n        const {data} = await axios.delete(`/api/book/${id}`);\r\n        return data;\r\n    }\r\n    /**\r\n     * 根据id查询书目\r\n     * @param id 书目id\r\n     */\r\n    public static async getById(id:string):Promise<IResponseData<IBook|null>>{\r\n        const {data} = await axios.put(`/api/book/find/${id}`);\r\n        return data;\r\n    }\r\n    /**\r\n     * 根据条件查询书目\r\n     * @param condition 查询条件\r\n     */\r\n    public static async getAll(condition:ISearchCondition):Promise<IResponsePageData<IBook>>{\r\n        const {data} = await axios.put(`/api/book/find`,{\r\n            params:condition,\r\n        });\r\n        return data;\r\n    }\r\n}","import { ThunkAction } from \"redux-thunk\";\r\nimport { BookService, IBook } from \"../../services/BookService\";\r\nimport { ISearchCondition, SwitchType } from \"../../services/CommonTypes\";\r\nimport { IRootState } from \"../reducers/RootReducer\";\r\nimport { IAction } from \"./ActionTypes\";\r\n/**\r\n * 根据IAction接口制作类型SaveBookAction\r\n */\r\nexport type SaveBookAction = IAction<\"book_save\",{\r\n    books:IBook[];\r\n    total:number;\r\n}>;\r\n/**\r\n * 保存书目数据\r\n * @param books 书本数组\r\n * @param total 书目总数\r\n */\r\nfunction saveBookAction(books:IBook[],total:number):SaveBookAction{\r\n    return {\r\n        type:\"book_save\",\r\n        payload:{\r\n            books,\r\n            total\r\n        }\r\n    }\r\n}\r\n/**\r\n * 根据IAction接口制作类型SaveBookAction\r\n */\r\nexport type SetLoadingAction = IAction<\"book_setLoading\",boolean>;\r\n/**\r\n * 设置状态是否为加载行为\r\n * @param isLoading 是否加载\r\n */\r\nfunction setLoadingAction(isLoading:boolean):SetLoadingAction{\r\n    return {\r\n        type:\"book_setLoading\",\r\n        payload:isLoading\r\n    }\r\n}\r\n/**\r\n * 根据IAction接口制作类型SetConditionAction\r\n */\r\nexport type SetConditionAction = IAction<\"book_setCondition\",ISearchCondition>\r\n/**\r\n * 设置查询条件行为\r\n * @param condition 查询条件 \r\n */\r\nfunction setConditionAction(condition:ISearchCondition):SetConditionAction{\r\n    return {\r\n        type:\"book_setCondition\",\r\n        payload:condition\r\n    }\r\n}\r\n/**\r\n * 根据IAction来制作类型DeleteAction\r\n */\r\nexport type DeleteAction = IAction<\"book_delete\",string>\r\n/**\r\n * 删除书目行为\r\n * @param id 书本id\r\n */\r\nfunction deleteAction(id:string):DeleteAction{\r\n    return{\r\n        type:\"book_delete\",\r\n        payload:id\r\n    }\r\n}\r\n/**\r\n * 根据IAction接口制作类型\r\n */\r\nexport type BookChangeSwitchAction = IAction<\"book_switch\",{\r\n    type:SwitchType,\r\n    newVal:boolean,\r\n    id:string\r\n}>\r\n/**\r\n * 更改布尔值行为\r\n * @param type 目标类型\r\n * @param newVal 改变后的值\r\n * @param id 书目id\r\n */\r\nfunction changeSwitchAction(type:SwitchType,newVal:boolean,id:string):BookChangeSwitchAction{\r\n    return {\r\n        type:\"book_switch\",\r\n        payload:{\r\n            type,\r\n            newVal,\r\n            id\r\n        }\r\n    }\r\n}\r\n\r\nexport type BookAction = BookChangeSwitchAction|SaveBookAction|SetConditionAction|SetLoadingAction|DeleteAction\r\n/**\r\n * 条件查询书目数组\r\n * @param condition 查询条件\r\n */\r\nfunction fetchBook(condition:ISearchCondition):ThunkAction<Promise<void>,IRootState,any,BookAction>{\r\n    return async (dispatch,getState)=>{\r\n        dispatch(setLoadingAction(true));\r\n        dispatch(setConditionAction(condition));\r\n        const curCondition = getState().book.condition;\r\n        const resp = await BookService.getAll(curCondition)\r\n        dispatch(saveBookAction(resp.data,resp.total))\r\n        dispatch(setLoadingAction(false));\r\n    }\r\n}\r\n/**\r\n * 通过id删除电影\r\n * @param id 书目id\r\n */\r\nfunction deleteBook(id:string):ThunkAction<Promise<void>,IRootState,any,BookAction>{\r\n    return async (dispatch)=>{\r\n        dispatch(setLoadingAction(true));\r\n        await BookService.delete(id);\r\n        dispatch(deleteAction(id));\r\n        dispatch(setLoadingAction(false));\r\n    }\r\n}\r\n\r\nfunction changeSwitch(type:SwitchType,newVal:boolean,id:string):ThunkAction<Promise<void>,IRootState,any,BookAction>{\r\n    return async (dispatch)=>{\r\n        dispatch(setLoadingAction(true));\r\n        dispatch(changeSwitchAction(type,newVal,id))\r\n        await BookService.edit(id,{\r\n            [type]:newVal\r\n        })\r\n        dispatch(setLoadingAction(false));\r\n    }\r\n}\r\n\r\nexport default {\r\n    saveBookAction,\r\n    setLoadingAction,\r\n    setConditionAction,\r\n    deleteAction,\r\n    fetchBook,\r\n    deleteBook,\r\n    changeSwitch\r\n}","import React, { Dispatch } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport BookTable, { IBookTableEvents } from \"../../components/BookTable\";\r\nimport BookAction from \"../../redux/actions/BookAction\";\r\nimport { IBookState } from \"../../redux/reducers/BookReducer\";\r\nimport { IRootState } from \"../../redux/reducers/RootReducer\";\r\n\r\nfunction mapStateToProps(state:IRootState):IBookState{\r\n    return state.book\r\n}\r\nfunction mapDispatchToProps(dispatch:Dispatch<any>):IBookTableEvents{\r\n    return {\r\n        onLoad(){\r\n            console.log('222')\r\n            dispatch(BookAction.fetchBook({\r\n                page:1,\r\n                limit:10,\r\n                key:\"\"\r\n            }))\r\n        },\r\n        onSwitchChange(type,newState,id){\r\n            dispatch(BookAction.changeSwitch(type,newState,id))\r\n        },\r\n        async onDelete(id){\r\n            dispatch(BookAction.deleteBook(id))\r\n        },\r\n        onChange(page){\r\n            dispatch(BookAction.fetchBook({\r\n                page,\r\n            }))\r\n        },\r\n        onKeyChange(key){\r\n            dispatch(BookAction.setConditionAction({\r\n                key,\r\n            }))\r\n        },\r\n        onSearch(){\r\n            dispatch(BookAction.fetchBook({\r\n                page:1\r\n            }))\r\n        }\r\n    }\r\n}\r\nconst HOC = connect(mapStateToProps,mapDispatchToProps);\r\n\r\nconst BookContatiner = HOC(BookTable)\r\n\r\nclass list extends React.Component{\r\n    render(){\r\n        return (\r\n            <BookContatiner/>\r\n        )\r\n    }\r\n}\r\nexport default list;","import { Button, Checkbox, Form, Input, message, Switch } from \"antd\";\r\nimport React from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { IBook } from \"../services/BookService\";\r\nimport ImgUploader from \"./imgUploader\";\r\n\r\ninterface IFormProp extends RouteComponentProps {\r\n    onSubmit:(book:IBook)=>Promise<string>\r\n    book?:IBook\r\n}\r\n// 默认样式\r\nconst layout = {\r\n    labelCol:{span:5},\r\n    wrapperCol:{\r\n        span:19,\r\n    },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol:{\r\n        offset:5,\r\n        span:19\r\n    }\r\n}\r\n\r\nclass BookForm extends React.Component<IFormProp>{\r\n    render(){\r\n        const onFinish = async (value:IBook) => {\r\n            if(value){\r\n                const result = await this.props.onSubmit(value)\r\n                if(result){\r\n                    message.error(result);\r\n                }else{\r\n                    message.success(\"提交成功\",1,()=>{\r\n                        this.props.history.push(\"/book\");\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        const normFile = (e:any) =>{\r\n            return e;\r\n        }\r\n\r\n        const fields = [];\r\n        if(this.props.book){\r\n            const arrKey = Object.entries(this.props.book)\r\n            for(let i = 0 , len = arrKey.length ; i < len ; i ++){\r\n                const ato = {\r\n                    name:arrKey[i][0],\r\n                    value:arrKey[i][1]\r\n                }\r\n                fields.push(ato);\r\n            }\r\n        }\r\n        const typeOptions:string[] = ['历史','科幻','纪实','传记','小说','散文','儿童读物']\r\n        return (\r\n            <Form\r\n                onFinish={onFinish}\r\n                {...layout}\r\n                style={{width:\"400px\",padding:\"1em\"}}\r\n                fields={fields}\r\n            >\r\n                <Form.Item\r\n                    label=\"书目名称\"\r\n                    name=\"name\"\r\n                    rules={[{\r\n                        required:true,\r\n                        message:\"书目名称不能为空\"\r\n                    }]}\r\n                >\r\n                    <Input/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"封面\"\r\n                    name=\"poster\"\r\n                    getValueFromEvent={normFile} \r\n                    noStyle\r\n                >\r\n                    <ImgUploader/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"书目类型\"\r\n                    name=\"types\"\r\n                    rules={[{\r\n                        required:true,\r\n                        message:\"请选择书目类型\"\r\n                    }]}\r\n                >\r\n                    <Checkbox.Group\r\n                        options={typeOptions}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"正在热销\"\r\n                    name=\"isHot\"\r\n                    valuePropName=\"checked\"\r\n                    initialValue={false}\r\n                >\r\n                    <Switch/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"即将上架\"\r\n                    name=\"isComing\"\r\n                    valuePropName=\"checked\"\r\n                    initialValue={false}\r\n                >\r\n                    <Switch/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"经典书目\"\r\n                    name=\"isClassic\"\r\n                    valuePropName=\"checked\"\r\n                    initialValue={false}\r\n                >\r\n                    <Switch/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"书目描述\"\r\n                    name=\"description\"\r\n                >\r\n                    <Input.TextArea rows={4}/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    {...tailLayout}\r\n                >\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(BookForm);\r\n","import React from 'react';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport BookForm from '../../components/BookForm';\r\nimport { BookService, IBook } from '../../services/BookService';\r\n\r\ninterface IParams {\r\n    id:string\r\n}\r\n\r\ninterface EditPageState {\r\n    book?:IBook\r\n}\r\n\r\nclass edit extends React.Component<any,EditPageState>{\r\n    state:EditPageState={\r\n        book:undefined\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const result = await BookService.getById(this.props.computedMatch.params.id);\r\n        if(result.data){\r\n            this.setState({\r\n                book:result.data\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <BookForm\r\n                book={this.state.book}\r\n                onSubmit={async (book)=>{\r\n                    const req = await BookService.edit(this.props.match.params.id,book);\r\n                    if(req.err){\r\n                        return req.err\r\n                    }\r\n                    return \"\"\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default edit;","import React from \"react\";\r\nimport BookForm from \"../../components/BookForm\";\r\nimport { BookService } from \"../../services/BookService\";\r\n\r\nexport default class add extends React.Component{\r\n    render(){\r\n        return (\r\n            <BookForm\r\n                onSubmit={\r\n                    async (book)=>{\r\n                        const req = await BookService.add(book)\r\n                        if(req.err){\r\n                            return req.err\r\n                        }\r\n                        return \"\"\r\n                    }\r\n                }\r\n            />\r\n        )\r\n    }\r\n}","// 登录和注册的跳转\r\nimport React, { Dispatch, useContext, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route,Redirect} from \"react-router-dom\";\r\nimport { IUserProp } from \"../../components/UserForm\";\r\nimport UserAction from \"../../redux/actions/UserAction\";\r\nimport { IRootState } from \"../../redux/reducers/RootReducer\";\r\nimport { IUserState } from \"../../redux/reducers/UserReducer\";\r\nimport { store } from \"../../redux/store\";\r\nimport { IUser } from \"../../services/UserService\";\r\n// React-Router 中的Route组件中有render属性\r\n    // 可以是一个函数返回一个可以渲染的内容\r\n    // 函数可以接收一个参数，返回上下文的属性\r\n// React-Router 中的Route组件中有children属性\r\n    // 与render属性的区别是无论是否匹配都会运行\r\n// Redirect 组件是专门用于跳转页面\r\n\r\nfunction mapStateToProps(state:IRootState):IUserState{\r\n    return state.user;\r\n}\r\n\r\nconst HOC = connect(mapStateToProps);\r\n\r\nconst ProtectedRoute = HOC(_ProtectedRoute);\r\n\r\nfunction _ProtectedRoute({component:Component,children,render,...rest}:any):any{\r\n    return (\r\n        <Route\r\n        {...rest}\r\n        render={(values)=>{\r\n            const returnurl = values.location.pathname;\r\n            if(rest.isLogin){\r\n                return <Component {...rest}/>\r\n            }else{\r\n                return <Redirect to={{\r\n                    pathname:\"/login\",\r\n                    // search:`?returnurl=${returnurl}`\r\n                    state:returnurl\r\n                }}/>\r\n            }\r\n        }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute;\r\n// 登录以及跳转\r\n// 1. 登录页面添加事件{登录成功后对某变量变为true}\r\n// 2. 创建一个新的路由对render属性进行包装，当变量为true是渲染目标，否则进行Redirect组件跳转\r\n// 3. 方式1：在Redirect设置to属性，添加search\r\n    // 登录页面使用qs对网址进行分析判断\r\n// 3. 方式2：在Redirect设置to属性，添加state\r\n    // 登录页面直接判断props.location.state\r\n","import { EyeInvisibleOutlined, EyeTwoTone, UserOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, message, Space } from 'antd';\r\nimport React from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\nimport { IUserState } from '../redux/reducers/UserReducer';\r\nimport { IUser } from '../services/UserService';\r\n\r\nexport interface IUserProp extends RouteComponentProps{\r\n    onSubmit:(user:IUser)=>Promise<any>\r\n    user?:IUser\r\n}\r\n\r\nconst layout = {\r\n    labelCol:{\r\n        span:5\r\n    },\r\n    wrapperCol:{\r\n        span:19,\r\n    }\r\n}\r\n\r\nconst tailLayout = {\r\n    wrapperCol:{\r\n        offset:5,\r\n        span:19\r\n    }\r\n}\r\n\r\nclass UserForm extends React.Component<IUserProp,any>{\r\n\r\n    \r\n    render(){\r\n        const onFinish = async (value:IUser) => {\r\n            if(value){\r\n                const res = await this.props.onSubmit(value);\r\n                if(!res){\r\n                    message.success(\"提交成功\",1,()=>{\r\n                        if(this.props.location.state){\r\n                            this.props.history.push(this.props.location.state as any)\r\n                        }else{\r\n                            this.props.history.push(\"/\")\r\n                        }\r\n                    })\r\n                }else{\r\n                    message.error(res);\r\n                }\r\n            }\r\n        }\r\n        return (\r\n            <Form\r\n                onFinish={onFinish}\r\n                {...layout}\r\n                style={{width:\"400px\",padding:\"1em\"}}\r\n            >\r\n                <Form.Item\r\n                    label=\"用户\"\r\n                    name=\"loginId\"\r\n                    rules={[{\r\n                        required:true,\r\n                        message:\"用户名不能为空\"\r\n                    }]}\r\n                >\r\n                    <Input\r\n                        placeholder=\"default size\" \r\n                        prefix={<UserOutlined />}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"密码\"\r\n                    name=\"loginPwd\"\r\n                    rules={[{\r\n                        required:true,\r\n                        message:\"密码不能为空\"\r\n                    }]}\r\n                >\r\n                    <Space direction=\"vertical\">\r\n                        <Input.Password\r\n                        placeholder=\"input password\"\r\n                        iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\r\n                        />\r\n                    </Space>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    {...tailLayout}\r\n                >\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                    >\r\n                        登录\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(UserForm);","import axios from \"axios\";\r\nimport { IResponseData, IResponseError } from \"./CommonTypes\";\r\n\r\nexport interface IUser {\r\n    _id?:string;\r\n    loginId:string;\r\n    loginPwd:string;\r\n}\r\n\r\nexport class UserService {\r\n    /**\r\n     * 添加\r\n     * @param user 用户数据\r\n     */\r\n    public static async add(user:IUser):Promise<IResponseData<IUser>|IResponseError>{\r\n        const {data} = await axios.post(\"/api/user/add\",user)\r\n        return data;\r\n    }\r\n    /**\r\n     * 登录\r\n     * @param loginId 用户名\r\n     * @param loginPwd 用户密码\r\n     */\r\n    public static async login(loginId:string,loginPwd:string):Promise<IResponseData<IUser>|IResponseError>{\r\n        const {data} = await axios.post(\"/api/user/login\",{loginId,loginPwd});\r\n        console.log(data);\r\n        return data;\r\n    }\r\n    /**\r\n     * whoami\r\n     * @param id 用户id\r\n     */\r\n    public static async whoami(id:string):Promise<IResponseData<IUser>|IResponseError>{\r\n        const {data} = await axios.put(`api/user/${id}`);\r\n        return data;\r\n    }\r\n}","import { ThunkAction } from \"redux-thunk\";\r\nimport { ISearchCondition } from \"../../services/CommonTypes\";\r\nimport { IUser, UserService } from \"../../services/UserService\";\r\nimport { IRootState } from \"../reducers/RootReducer\";\r\nimport { IAction } from \"./ActionTypes\";\r\n/**\r\n * 根据IAction接口制作类型\r\n */\r\nexport type SaveUserAction = IAction<\"user_save\",{\r\n    user:IUser;\r\n}>;\r\n/**\r\n * 保存用户数据\r\n * @param user 用户数据\r\n */\r\nfunction saveUserAction(user:IUser):SaveUserAction{\r\n    return {\r\n        type:\"user_save\",\r\n        payload:{\r\n            user,        \r\n        }\r\n    }\r\n}\r\n/**\r\n * 根据IAction接口制作类型\r\n */\r\nexport type SetLoadingAction = IAction<\"user_setLoading\",boolean>;\r\n/**\r\n * 设置状态是否为加载行为\r\n * @param isLoading 是否加载\r\n */\r\nfunction setLoadingAction(isLoading:boolean):SetLoadingAction{\r\n    return {\r\n        type:\"user_setLoading\",\r\n        payload:isLoading\r\n    }\r\n}\r\n/**\r\n * 根据IAction接口制作类型\r\n */\r\nexport type SetConditionAction = IAction<\"user_setCondition\",ISearchCondition>;\r\n/**\r\n * 设置查询条件行为\r\n * @param condition 查询条件\r\n */\r\nfunction setConditionAction(condition:ISearchCondition):SetConditionAction{\r\n    return {\r\n        type:\"user_setCondition\",\r\n        payload:condition\r\n    }\r\n}\r\n/**\r\n * 根据IAction接口制作类型\r\n */\r\nexport type SetLoginAction = IAction<\"user_setLogin\",boolean>;\r\n/**\r\n * 设置状态是否为加载行为\r\n * @param isLogin 是否加载\r\n */\r\nfunction setLoginAction(isLogin:boolean):SetLoginAction{\r\n    return {\r\n        type:\"user_setLogin\",\r\n        payload:isLogin\r\n    }\r\n}\r\n\r\nexport type UserAction = SetLoginAction|SaveUserAction|SetConditionAction|SetLoadingAction\r\n\r\nfunction registerAction(user:IUser):ThunkAction<Promise<void>,IRootState,any,UserAction>{\r\n    return async (dispatch,getState)=>{\r\n        dispatch(setLoadingAction(true));\r\n        const resp = await UserService.add(user);\r\n        if(resp.data){\r\n            dispatch(saveUserAction(resp.data));\r\n        }\r\n        dispatch(setLoadingAction(false));\r\n    }\r\n}\r\n\r\nfunction loginAction(loginId:string,loginPwd:string):ThunkAction<Promise<void>,IRootState,any,UserAction>{\r\n    return async (dispatch,getState)=>{\r\n        console.log(\"111\")\r\n        dispatch(setLoadingAction(true));\r\n        const resp = await UserService.login(loginId,loginPwd);\r\n        if(resp.data){\r\n            dispatch(setLoginAction(true))\r\n        }\r\n        dispatch(setLoadingAction(false));\r\n    }\r\n}\r\n\r\nfunction whoamiAction(id:string):ThunkAction<Promise<void>,IRootState,any,UserAction>{\r\n    return async (dispatch,getState)=>{\r\n        dispatch(setLoadingAction(true));\r\n        const resp = await UserService.whoami(id);\r\n        if(resp.data){\r\n            dispatch(saveUserAction(resp.data));\r\n        }   \r\n        dispatch(setLoadingAction(false));\r\n    }\r\n}\r\n\r\n\r\nexport default {\r\n    setConditionAction,\r\n    setLoadingAction,\r\n    saveUserAction,\r\n    registerAction,\r\n    loginAction,\r\n    whoamiAction\r\n}","import React, { Dispatch } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport UserForm from \"../../components/UserForm\";\r\nimport UserReducer, { IUserState } from \"../../redux/reducers/UserReducer\";\r\nimport UserAction from \"../../redux/actions/UserAction\"\r\nimport { IRootState } from \"../../redux/reducers/RootReducer\";\r\nimport { IUser } from \"../../services/UserService\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction mapStateToProps(state:IRootState):IUserState{\r\n    return state.user;\r\n}\r\nfunction mapDispatchToProps(dispatch:Dispatch<any>,pro:any):any{\r\n    return {\r\n        async onSubmit(user:IUser){\r\n            await dispatch(UserAction.loginAction(user.loginId,user.loginPwd))\r\n            return null\r\n        }\r\n    }\r\n}\r\n\r\nconst HOC = connect(mapStateToProps,mapDispatchToProps);\r\n\r\nconst UserFormStore:any = HOC(UserForm);\r\n\r\nclass login extends React.Component<RouteComponentProps<any>,any>{\r\n    render(){\r\n        const pushState = this.props;\r\n        return (\r\n            <UserFormStore\r\n            pushState={pushState}\r\n            // propsHistory={pushHistory}\r\n                // onSubmit={async (user)=>{\r\n                //     await UserAction.loginAction(user.loginId, user.loginPwd);\r\n                //     const pushState:string = this.props.location.state as any;\r\n                //     if(pushState){\r\n                //         console.log(pushState);\r\n                //         this.props.history.push(pushState)\r\n                //     }else{\r\n                //         this.props.history.push(\"/\")\r\n                //     }\r\n                //     return null\r\n                // }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default login;","import React from \"react\";\r\nimport { NavLink, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport AddMovie from \"./movie/AddMovie\";\r\nimport EditMovie from \"./movie/EditMovie\";\r\nimport MovieList from \"./movie/MovieList\";\r\nimport { Layout,Menu } from \"antd\";\r\nimport BookList from \"./book/BookList\";\r\nimport EditBook from \"./book/EditBook\";\r\nimport AddBook from \"./book/AddBook\";\r\nimport ProtectedRoute from \"./guard/ProtectedRoute\";\r\nimport UserLogin from \"./user/UserLogin\"\r\nconst {\r\n    Header, Sider, Content,\r\n} = Layout;\r\n\r\nconst _Layout: React.FC = function () {\r\n    return (\r\n        <div className=\"container\">\r\n            <Layout>\r\n                <Header className=\"header\">\r\n                    <NavLink to=\"/\">电影管理系统</NavLink>\r\n                </Header>\r\n                <Layout>\r\n                    <Sider>\r\n                        <Menu\r\n                            mode=\"inline\"\r\n                            theme=\"dark\"\r\n                        >   \r\n                            <Menu.Item key=\"1\">\r\n                                <NavLink to=\"/\">首页</NavLink>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"2\">\r\n                                <NavLink to=\"/movie\">电影列表</NavLink>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"3\">\r\n                                <NavLink to=\"/movie/add\">添加电影</NavLink>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"4\">\r\n                                <NavLink to=\"/book\">书目列表</NavLink>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"5\">\r\n                                <NavLink to=\"/book/add\">添加书目</NavLink>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"6\">\r\n                                <NavLink to=\"/login\">登录注销</NavLink>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </Sider>\r\n                    <Content>\r\n                        <div className=\"main\">\r\n                            <Switch>\r\n                                <Route path=\"/login\" component={UserLogin}></Route>\r\n                                <ProtectedRoute path=\"/movie\" component={MovieList} exact={true}></ProtectedRoute>\r\n                                <ProtectedRoute path=\"/movie/add\" component={AddMovie}></ProtectedRoute>\r\n                                <ProtectedRoute path=\"/movie/edit/:id\" component={EditMovie}></ProtectedRoute>\r\n                                <ProtectedRoute path=\"/book\" component={BookList} exact={true}></ProtectedRoute>\r\n                                <ProtectedRoute path=\"/book/add\" component={AddBook}></ProtectedRoute>\r\n                                <ProtectedRoute path=\"/book/edit/:id\" component={EditBook}></ProtectedRoute>\r\n                                <Route path=\"/\" component={Home} exact={true}></Route>\r\n                            </Switch>\r\n                        </div>\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default _Layout;","import { Reducer } from \"react\";\r\nimport { IBook } from \"../../services/BookService\";\r\nimport { ISearchCondition } from \"../../services/CommonTypes\";\r\nimport  {BookAction, BookChangeSwitchAction, DeleteAction, SaveBookAction, SetConditionAction, SetLoadingAction } from \"../actions/BookAction\";\r\n\r\nexport type IBookCondition = Required<ISearchCondition>\r\n\r\nexport interface IBookState {\r\n    data:IBook[];\r\n    condition:IBookCondition;\r\n    total:number;\r\n    isLoading:boolean;\r\n    totalPage:number;\r\n}\r\n\r\nconst defaultState:IBookState = {\r\n    data:[],\r\n    condition:{\r\n        page:1,\r\n        limit:10,\r\n        key:\"\"\r\n    },\r\n    total:0,\r\n    isLoading:false,\r\n    totalPage:0\r\n}\r\n\r\ntype BookReducer<T> = Reducer<IBookState,T>\r\n\r\nconst saveBook:BookReducer<SaveBookAction> = function (state,action) {\r\n    return {\r\n        ...state,\r\n        data:action.payload.books,\r\n        total:action.payload.total,\r\n        totalPage:Math.ceil(action.payload.total/state.condition.limit)\r\n    }\r\n}\r\nconst setCondition:BookReducer<SetConditionAction> = function (state,action){\r\n    const newState = {\r\n        ...state,\r\n        condition:{\r\n            ...state.condition,\r\n            ...action.payload\r\n        },\r\n    };\r\n    newState.totalPage = Math.ceil(newState.total/newState.condition.limit)\r\n    return newState;\r\n}\r\nconst setLoading:BookReducer<SetLoadingAction> = function (state,action){\r\n    return {\r\n        ...state,\r\n        isLoading:action.payload\r\n    }\r\n}\r\nconst deleteBook:BookReducer<DeleteAction> = function(state,action){\r\n    return {\r\n        ...state,\r\n        data:state.data.filter(m=>m._id !== action.payload),\r\n        total:state.total - 1,\r\n        totalPage:Math.ceil((state.total - 1)/state.condition.limit)\r\n    }\r\n}\r\nconst changeSwitch:BookReducer<BookChangeSwitchAction> = function (state,action){\r\n    const book = state.data.find(d=>d._id === action.payload.id);\r\n    if(!book){\r\n        return state;\r\n    }\r\n    const newBook = {...book};\r\n    newBook[action.payload.type] = action.payload.newVal;\r\n    const newData = state.data.map(d=>{\r\n        if(d._id === action.payload.id){\r\n            return newBook;\r\n        }\r\n        return d;\r\n    })\r\n    return {\r\n        ...state,\r\n        data:newData\r\n    }\r\n}\r\nexport default function (state:IBookState = defaultState,action:BookAction){\r\n    switch (action.type){\r\n        case \"book_delete\":\r\n            return deleteBook(state,action);\r\n\r\n        case \"book_save\":\r\n            return saveBook(state,action);\r\n\r\n        case \"book_setCondition\":\r\n            return setCondition(state,action);\r\n\r\n        case \"book_setLoading\":\r\n            return setLoading(state,action);\r\n\r\n        case \"book_switch\":\r\n            return changeSwitch(state,action);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","// 描述电影列表的状态类型\r\n\r\nimport { Reducer } from \"react\";\r\nimport { ISearchCondition } from \"../../services/CommonTypes\";\r\nimport { IMovie } from \"../../services/MovieService\";\r\nimport { DeleteAction, MovieAction, MovieChangeSwitchAction, SaveMoviesAction, SetConditionAction, SetLoadingAction } from \"../actions/MovieAction\";\r\n\r\n\r\nexport type IMovieCondition = Required<ISearchCondition>;\r\n\r\n/**\r\n * 电影状态\r\n */\r\nexport interface IMovieState {\r\n    /**\r\n     * 电影数组\r\n     */\r\n    data: IMovie[];\r\n    /**\r\n     * 查询条件\r\n     */\r\n    condition: IMovieCondition;\r\n    /**\r\n     * 总记录数\r\n     */\r\n    total: number;\r\n    /**\r\n     * 是否正在加载数据\r\n     */\r\n    isLoading: boolean;\r\n    /**\r\n     * 总页数\r\n     */\r\n    totalPage:number;\r\n\r\n}\r\n\r\n/**\r\n * 默认状态\r\n */\r\nconst defaultState: IMovieState = {\r\n    data: [],\r\n    condition: {\r\n        page: 1,\r\n        limit: 10,\r\n        key: \"\"\r\n    },\r\n    total: 0,\r\n    isLoading: false,\r\n    totalPage:0\r\n};\r\n/**\r\n * Reducer:<S,A>=>S\r\n */\r\ntype MovieReducer<T> = Reducer<IMovieState,T>\r\n\r\n\r\nconst saveMovie:MovieReducer<SaveMoviesAction> = function (state,action){\r\n    // ES5\r\n    // return Object.assign({},state,{\r\n    //     data:action.payload.movies,\r\n    //     total:action.payload.total\r\n    // })\r\n    // ES6\r\n    return {\r\n        ...state,\r\n        data:action.payload.movies,\r\n        total:action.payload.total,\r\n        totalPage:Math.ceil(action.payload.total/state.condition.limit)\r\n    }\r\n}\r\n\r\nconst setCondition:MovieReducer<SetConditionAction> = function(state,action){\r\n    const newState =  {\r\n        ...state,\r\n        condition:{\r\n            ...state.condition,\r\n            ...action.payload\r\n        },\r\n    };\r\n    newState.totalPage = Math.ceil(newState.total/newState.condition.limit)\r\n    return newState;\r\n}\r\n\r\nconst setLoading:MovieReducer<SetLoadingAction> = function(state,action){\r\n    return {\r\n        ...state,\r\n        isLoading:action.payload\r\n    }\r\n}\r\n\r\nconst deleteMovie:MovieReducer<DeleteAction> = function (state,action){\r\n    return {\r\n        ...state,\r\n        data:state.data.filter(m=>m._id !== action.payload),\r\n        total:state.total - 1,\r\n        totalPage:Math.ceil((state.total - 1)/state.condition.limit)\r\n    }\r\n}\r\n\r\nconst changeSwitch:MovieReducer<MovieChangeSwitchAction> = function (state,action){\r\n    // 1. 根据id找到对象\r\n    const movie = state.data.find(d=>d._id === action.payload.id);\r\n    if(!movie){\r\n        return state;\r\n    }\r\n    // 2. 对象克隆\r\n    const newMovie = {...movie};\r\n    // 3. 更新数据\r\n    newMovie[action.payload.type] = action.payload.newVal;\r\n    // 4. 将对象重新放入数组中\r\n    const newData = state.data.map(d=>{\r\n        if(d._id === action.payload.id){\r\n            return newMovie;\r\n        }\r\n        return d;\r\n    })\r\n    return {\r\n        ...state,\r\n        data:newData\r\n    }\r\n}\r\n\r\n/**\r\n * 根据行为的类型进行不同对状态的操作\r\n * @param state 状态\r\n * @param action 行为\r\n */\r\nexport default function (state: IMovieState = defaultState, action: MovieAction) {\r\n    // 可辨识联合\r\n    switch (action.type) {\r\n        case \"movie_delete\":\r\n            return deleteMovie(state,action);\r\n            \r\n        case \"movie_save\":\r\n            return saveMovie(state,action);\r\n            \r\n        case \"movie_setCondition\":\r\n            return setCondition(state,action);\r\n            \r\n        case \"movie_setLoading\":\r\n            return setLoading(state,action);\r\n        case \"movie_switch\":\r\n            return changeSwitch(state,action)\r\n        default:\r\n            return state;\r\n    }\r\n}","import { Reducer } from \"react\";\r\nimport { IUser } from \"../../services/UserService\";\r\nimport  { UserAction,SaveUserAction, SetConditionAction, SetLoadingAction, SetLoginAction } from \"../actions/UserAction\";\r\n\r\nexport type IUserCondition = Required<IUser>;\r\n\r\nexport interface IUserState {\r\n    data:IUser;\r\n    condition:IUser;\r\n    isLoading:boolean;\r\n    isLogin:boolean;\r\n}\r\nconst defaultState = {\r\n    data:{\r\n        loginId:\"\",\r\n        loginPwd:\"\"\r\n    },\r\n    condition:{\r\n        loginId:\"\",\r\n        loginPwd:\"\"\r\n    },\r\n    isLoading:false,\r\n    isLogin:false,\r\n}\r\n\r\ntype UserReducer<T> = Reducer<IUserState,T>\r\n\r\nconst saveUser:UserReducer<SaveUserAction> = function (state,action) {\r\n    return {\r\n        ...state,\r\n        data:action.payload.user,\r\n    }\r\n}\r\n\r\nconst setCondition:UserReducer<SetConditionAction> = function (state,action){\r\n    const newState = {\r\n        ...state,\r\n        condition:{\r\n            ...state.condition,\r\n            ...action.payload\r\n        }\r\n    }\r\n    return newState;\r\n}\r\n\r\nconst setLoading:UserReducer<SetLoadingAction> = function (state,action){\r\n    return {\r\n        ...state,\r\n        isLoading:action.payload\r\n    }\r\n} \r\n\r\nconst setLogin:UserReducer<SetLoginAction> = function(state,action){\r\n    return {\r\n        ...state,\r\n        isLogin:action.payload\r\n    }\r\n}\r\n\r\nexport default function (state:IUserState = defaultState,action:UserAction){\r\n    switch(action.type){\r\n        case \"user_save\":\r\n            return saveUser(state,action);\r\n        case \"user_setCondition\":\r\n            return setCondition(state,action);\r\n        case \"user_setLoading\":\r\n            return setLoading(state,action);\r\n        case \"user_setLogin\":\r\n            return setLogin(state,action);\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport book, { IBookState } from \"./BookReducer\";\r\nimport movie, { IMovieState } from \"./MovieReducer\";\r\nimport user, { IUserState } from \"./UserReducer\";\r\n\r\n/**\r\n * 整个网站的根状态\r\n */\r\nexport interface IRootState {\r\n    movie:IMovieState,\r\n    book:IBookState,\r\n    user:IUserState,\r\n}\r\n\r\n/**\r\n * 利用redux中的combineReducers方法来合并Reducer\r\n */\r\nexport const rootReducer = combineReducers({\r\n    movie,\r\n    book,\r\n    user\r\n})","// 仓库\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport { IRootState, rootReducer } from \"./reducers/RootReducer\";\r\nimport logger from \"redux-logger\";\r\nimport thunk, { ThunkMiddleware } from \"redux-thunk\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\n/**\r\n * 利用redux中的createStore创建一个仓库\r\n * @ 参数rootReducer\r\n * @ 中间件redux-logger\r\n */\r\nexport const store = createStore(\r\n    rootReducer,\r\n    // thunk写在前面，logger写在最后\r\n    // 由于redux不能准确把握中间件的类型检查，容易使分发时类型不匹配\r\n    // - 直接用类型断言as any\r\n    // - 在定义中间件时使用泛型，thunk自己定义了一个中间件类型ThunkMiddleware\r\n    composeWithDevTools(applyMiddleware(thunk as ThunkMiddleware<IRootState>,logger)\r\n    ));","import React from 'react';\nimport _Layout from './pages/Layout';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\"\n\n// BrowserRouter\n// - Route设置路由 （path设置路径 component设置路由组件）\n// Provider \n// - react-redux提供的数据包裹层\n// - 需要配置参数store\n\n// 函数组件\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Route path=\"/\" component={_Layout}></Route>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"antd/dist/antd.css\";\n\n// 被中间件redux-logger替代\n// store.subscribe(()=>{\n//   console.log(store.getState())\n// })\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// 界面\n// 库：antd\n// 引入css文件antd/dist/antd.css\n\n// 路由\n// 库A：react-router\n// 库B：react-router-dom\n\n// redux 状态管理\n// 大型项目中使用\n// 不是所有的状态数据都需要放到redux中\n// action:平面对象，plain object，它描述了数据变化的方式\n// reducer:数据变化的具体内容，它需要一个action来触发\n// store：存储数据的仓库\n// store.subscribe可以使用中间件来处理redux-logger\n// 副作用：redux-thunk、redux-saga（最好，难度高）、dva（saga封装，脚手架）、umijs（dva延申）\n"],"sourceRoot":""}