{"version":3,"sources":["services/CommonTypes.ts","pages/Home.tsx","components/imgUploader.tsx","components/MovieForm.tsx","services/MovieService.ts","pages/movie/AddMovie.tsx","pages/movie/EditMovie.tsx","assets/default.jpg","components/MovieTable.tsx","redux/actions/MovieAction.ts","pages/movie/MovieList.tsx","pages/Layout.tsx","redux/reducers/MovieReducer.ts","redux/reducers/RootReducer.ts","redux/store.ts","App.tsx","index.tsx"],"names":["SwitchType","React","Component","up","state","showModal","this","props","value","PlusOutlined","style","color","uid","name","url","p","formData","FormData","append","filename","file","request","Request","action","method","body","fetch","then","resq","json","err","message","error","onChange","data","accept","listType","fileList","getFileList","customRequest","handleRequest","bind","onRemove","onPreview","setState","getUploadContent","visible","title","footer","onCancel","alt","width","src","layout","labelCol","span","wrapperCol","tailLayout","offset","MovieForm","onFinish","a","console","log","onSubmit","result","success","history","push","fields","movie","arrKey","Object","keys","arrValue","values","i","length","ato","padding","Item","label","rules","required","getValueFromEvent","e","noStyle","Group","options","initialValue","min","max","step","valuePropName","TextArea","rows","type","htmlType","withRouter","MovieService","axios","post","id","put","delete","get","condition","params","add","req","edit","undefined","getById","match","table","onLoad","prop","marginBottom","display","key","onKeyChange","target","onPressEnter","onSearch","icon","SearchOutlined","size","marginRight","onClick","dataIndex","render","poster","className","defaultImg","filterDropdown","getFilterDropdown","filterIcon","text","join","timeLong","isHot","record","checked","newVal","onSwitchChange","_id","isComing","isClassic","to","onConfirm","onDelete","okText","cancelText","total","current","page","pageSize","limit","pagination","rowKey","dataSource","columns","getColumns","getPageConfig","handleChange","loading","isLoading","saveMoviesAction","movies","payload","setLoadingAction","setConditionAction","deleteAction","changeSwitchAction","fetchMovie","dispatch","getState","curCondition","resp","deleteMovie","changeSwitch","MovieContainer","connect","MovieAction","newState","HOC","MovieTable","list","Header","Layout","Sider","Content","_Layout","mode","theme","path","component","Home","exact","MovieList","AddMovie","EditMovie","defaultState","totalPage","saveMovie","Math","ceil","setCondition","setLoading","filter","m","find","d","newMovie","newData","map","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","logger","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a8a078a5.chunk.js","sourcesContent":["export interface IResponseError{\r\n    err:string;\r\n    data:null;\r\n}\r\n\r\nexport interface IResponseData<T>{\r\n    err:\"\";\r\n    data:T\r\n}\r\n\r\nexport interface IResponsePageData<T>{\r\n    err:\"\";\r\n    data:T[];\r\n    total:number;\r\n}\r\n\r\nexport interface ISearchCondition{\r\n    page?:number;\r\n    limit?:number;\r\n    key?:string;\r\n}\r\n\r\nexport enum SwitchType {\r\n    isHot = \"isHot\",\r\n    isComing = \"isComing\",\r\n    isClassic = \"isClassic\"\r\n}","import React from \"react\";\r\nimport Uploader from \"../components/imgUploader\"\r\n// eslint-disable-next-line react/display-name\r\nexport default class extends React.Component {\r\n\r\n    // state = {\r\n    //     img:\"\"\r\n    // }\r\n\r\n    render(){\r\n        return (\r\n            <h1>\r\n                欢迎使用电影管理系统\r\n            </h1>\r\n            // <Uploader \r\n            // curImgUrl={this.state.img}\r\n            // onChange={newUrl =>{\r\n            //     this.setState({\r\n            //         img:newUrl\r\n            //     })\r\n            // }}\r\n            // />\r\n        )\r\n    }\r\n}","import { PlusOutlined } from \"@ant-design/icons\";\r\nimport { message, Modal, Upload } from \"antd\";\r\nimport { UploadFile } from \"antd/lib/upload/interface\";\r\nimport React from \"react\";\r\nimport { IResponseData, IResponseError } from \"../services/CommonTypes\";\r\n\r\ninterface IImgUploaderProps {\r\n    value?: string\r\n    onChange?: (imgUrl: string) => void\r\n}\r\n\r\ninterface IImgState {\r\n    showModal: boolean\r\n}\r\n\r\nexport default class up extends React.Component<IImgUploaderProps, IImgState> {\r\n\r\n    state: IImgState = {\r\n        showModal: false\r\n    }\r\n\r\n    private getUploadContent() {\r\n        if (this.props.value) {\r\n            return null;\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <PlusOutlined />\r\n                    <div style={{ color: \"gray\" }} >电影海报</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    private getFileList(): UploadFile[] {\r\n        if (this.props.value) {\r\n            return [\r\n                {\r\n                    uid: this.props.value,\r\n                    name: this.props.value,\r\n                    url: this.props.value\r\n\r\n                }\r\n            ]\r\n        }\r\n        return []\r\n    }\r\n\r\n    async handleRequest(p: any) {\r\n        // HTML5表达传输\r\n        /**\r\n         * 封装表单信息\r\n         * @ filename\r\n         * @ file\r\n         */\r\n        let formData = new FormData();\r\n        formData.append(p.filename, p.file);\r\n        // fetch api\r\n        /**\r\n         * 包装请求体\r\n         * @ action\r\n         */\r\n        const request = new Request(p.action, {\r\n            method: \"post\",\r\n            body: formData\r\n        })\r\n        const resq: IResponseData<string> | IResponseError = await fetch(request).then(resq => resq.json());\r\n        if (resq.err) {\r\n            message.error(resq.err);\r\n        } else {\r\n            if (this.props.onChange) {\r\n                this.props.onChange(resq.data!)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Upload\r\n                    action=\"/api/upload\"\r\n                    name=\"imgfile\"\r\n                    accept=\".jpg,.png,.gif\"\r\n                    listType=\"picture-card\"\r\n                    fileList={this.getFileList()}\r\n                    customRequest={this.handleRequest.bind(this)}\r\n                    onRemove={() =>{\r\n                        if(this.props.onChange){\r\n                            this.props.onChange(\"\")\r\n                        }}\r\n                    }\r\n                    onPreview={\r\n                        () => {\r\n                            this.setState({\r\n                                showModal: true\r\n                            })\r\n                        }\r\n                    }\r\n                >\r\n                    {this.getUploadContent()}\r\n                </Upload>\r\n                <Modal\r\n                    visible={this.state.showModal}\r\n                    title={this.props.value}\r\n                    footer={null}\r\n                    onCancel={() => {\r\n                        this.setState({\r\n                            showModal: false\r\n                        })\r\n                    }}\r\n                >\r\n                    <img alt=\"\" style={{ width: '100%' }} src={this.props.value} />\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import { Button, Checkbox, Form, Input, InputNumber, message, Switch } from \"antd\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport React, { useState } from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport { IMovie } from \"../services/MovieService\";\r\nimport ImgUploader from \"./imgUploader\";\r\n\r\ninterface IFormProp extends RouteComponentProps {\r\n    onSubmit: (movie: IMovie) => Promise<string>\r\n    movie?: IMovie\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: {\r\n        span: 19,\r\n    },\r\n};\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 5,\r\n        span: 19\r\n    }\r\n}\r\n\r\nclass MovieForm extends React.Component<IFormProp> {\r\n\r\n    render() {\r\n        const onFinish = async (value: IMovie) => {\r\n            console.log(value);\r\n            if (value) {\r\n                const result = await this.props.onSubmit(value);\r\n                if (result) {\r\n                    message.error(result);\r\n                } else {\r\n                    message.success(\"提交成功\", 2, () => {\r\n                        // 1000ms后跳转页面\r\n                        this.props.history.push(\"/movie\")\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        const normFile = (e: any) => {\r\n            return e\r\n        };\r\n        const fields = [];\r\n        if(this.props.movie){\r\n            const arrKey = Object.keys(this.props.movie);\r\n            const arrValue = Object.values(this.props.movie);\r\n            for(let i = 0 ; i < arrKey.length ; i++){\r\n                const ato = {\r\n                    name:arrKey[i],\r\n                    value:arrValue[i]\r\n                }\r\n                fields.push(ato);\r\n            }\r\n            console.log(arrKey,arrValue,fields);\r\n        }\r\n        const areasOptions: string[] = ['中国大陆', '美国', '日本', '韩国'];\r\n        const typeOptions: string[] = ['喜剧', '悲剧', '合家欢', '战争', '科幻', '惊悚'];\r\n        return (\r\n            <Form\r\n                onFinish={onFinish}\r\n                {...layout}\r\n                style={{ width: \"400px\", padding: \"1em\" }}\r\n                fields={fields}\r\n            >\r\n                <Form.Item\r\n                    label=\"电影名称\"\r\n                    name=\"name\"\r\n                    rules={[{\r\n                        required: true,\r\n                        message: \"电影名称不能为空\"\r\n                    }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"封面\"\r\n                    name=\"poster\"\r\n                    getValueFromEvent={normFile} noStyle\r\n                >\r\n                    <ImgUploader />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"发行地区\"\r\n                    name=\"areas\"\r\n                    rules={[{\r\n                        required: true,\r\n                        message: \"请选择地区\"\r\n                    }]}\r\n                >\r\n                    <Checkbox.Group\r\n                        options={areasOptions}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"影片类型\"\r\n                    name=\"types\"\r\n                    rules={[{\r\n                        required: true,\r\n                        message: \"请选择电影类型\"\r\n                    }]}\r\n                >\r\n                    <Checkbox.Group\r\n                        options={typeOptions}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"时长\"\r\n                    name=\"timeLong\"\r\n                    initialValue={120}\r\n                    rules={[{\r\n                        required: true,\r\n                        message: \"请填写时长\"\r\n                    }]}\r\n                >\r\n                    <InputNumber\r\n                        min={30}\r\n                        max={240}\r\n                        step={10}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"正在热映\"\r\n                    name=\"isHot\"\r\n                    valuePropName=\"checked\"\r\n                    initialValue={false}\r\n                >\r\n                    <Switch\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"即将上映\"\r\n                    name=\"isComing\"\r\n                    valuePropName=\"checked\"\r\n                    initialValue={false}\r\n                >\r\n                    <Switch\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"经典影片\"\r\n                    valuePropName=\"checked\"\r\n                    name=\"isClassic\"\r\n                    initialValue={false}\r\n                >\r\n                    <Switch\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"影片描述\"\r\n                    name=\"description\"\r\n                >\r\n                    <Input.TextArea rows={4} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    {...tailLayout}\r\n                >\r\n                    <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(MovieForm);","import axios from \"axios\"\r\nimport { IResponseData, IResponseError, IResponsePageData, ISearchCondition } from \"./CommonTypes\";\r\n\r\nexport interface IMovie {\r\n    // 与服务器有相似对的类型声明可以使用webpack来处理\r\n    _id?:string;\r\n    name:string;\r\n    types:string[];\r\n    areas:string[];\r\n    timeLong:number;\r\n    isHot:boolean;\r\n    isComing:boolean;\r\n    isClassic:boolean;\r\n    description?:string;\r\n    poster?:string;\r\n}\r\n\r\nexport class MovieService {\r\n    // ajax-添加\r\n    public static async add(movie:IMovie):Promise<IResponseData<IMovie>|IResponseError>{\r\n        // 客户端：3001，服务端：3000\r\n        // 需要完整的请求路径，可以使用代理\r\n        // package.json中的“proxy”配置\r\n        const {data} = await axios.post(\"/api/movie\",movie)\r\n        return data;\r\n    }\r\n    // ajax-修改\r\n    public static async edit(id:string,movie:Partial<IMovie>):Promise<IResponseData<true>|IResponseError>{\r\n        const {data} = await axios.put(`/api/movie/${id}`,movie);\r\n        return data;\r\n    }\r\n    // ajax-删除\r\n    public static async delete(id:string):Promise<IResponseData<true>|IResponseError>{\r\n        const {data} = await axios.delete(`/api/movie/${id}`);\r\n        return data;\r\n    }\r\n    // ajax-查找一个\r\n    public static async getById(id:string):Promise<IResponseData<IMovie|null>>{\r\n        const {data} = await axios.get(`/api/movie/${id}`);\r\n        return data;\r\n    }\r\n    // ajax-查找多个\r\n    public static async get(condition:ISearchCondition):Promise<IResponsePageData<IMovie>>{\r\n        const {data} = await axios.get(`/api/movie/`,{\r\n            params:condition,\r\n        });\r\n        return data;\r\n    }\r\n}","import React from \"react\";\r\nimport MovieForm from \"../../components/MovieForm\";\r\nimport { MovieService } from \"../../services/MovieService\";\r\n\r\n// eslint-disable-next-line react/display-name\r\nexport default class extends React.Component {\r\n    render(){\r\n        return (\r\n            <MovieForm onSubmit={async (movie)=>{\r\n                const req = await MovieService.add(movie)\r\n                if(req.err){\r\n                    return req.err\r\n                }\r\n                return \"\"\r\n            }}/>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport MovieForm from \"../../components/MovieForm\";\r\nimport { IMovie, MovieService } from \"../../services/MovieService\";\r\n\r\ninterface IParams {\r\n    id:string\r\n}\r\n\r\ninterface EditPageState {\r\n    movie?:IMovie\r\n}\r\n\r\n/**\r\n * 获取地址栏中的params\r\n * @ 使用RouteComponentPropse<>泛型\r\n */\r\nclass edit extends React.Component<RouteComponentProps<IParams>,EditPageState>{\r\n    state:EditPageState = {\r\n        movie:undefined\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const result = await MovieService.getById(this.props.match.params.id)\r\n        if(result.data){\r\n            this.setState({\r\n                movie:result.data\r\n            })\r\n        }\r\n    }\r\n\r\n    // id从this.props.match.params.id获取\r\n    render(){\r\n        return (\r\n            <MovieForm \r\n            movie={this.state.movie}\r\n            onSubmit={async (movie)=>{\r\n                const req = await MovieService.edit(this.props.match.params.id,movie)\r\n                if(req.err){\r\n                    return req.err\r\n                }\r\n                return \"\"\r\n            }}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default edit; ","export default __webpack_public_path__ + \"static/media/default.d456d3ad.jpg\";","import React, { ReactNode, VoidFunctionComponent } from \"react\";\r\nimport { IMovieState } from \"../redux/reducers/MovieReducer\";\r\nimport { Button, Input, message, Popconfirm, Switch, Table  } from \"antd\";\r\nimport { ColumnsType, TablePaginationConfig } from \"antd/lib/table\";\r\nimport { IMovie } from \"../services/MovieService\";\r\nimport defaultImg from \"../assets/default.jpg\";\r\nimport { SwitchType } from \"../services/CommonTypes\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\nexport interface IMovieTableEvents {\r\n    /**\r\n     * 完成加载之后的事件\r\n     */\r\n    onLoad: () => void;\r\n    onSwitchChange: (type: SwitchType, newState: boolean, id: string) => void\r\n    onDelete:(id:string)=>Promise<void>,\r\n    onChange:(page:number)=>void\r\n    onKeyChange:(key:string)=>void\r\n    onSearch:()=>void\r\n}\r\n/**\r\n * @ 使用交叉类型定义返回值\r\n * @ 便于后期赋值方法\r\n */\r\nclass table extends React.Component<IMovieTableEvents & IMovieState> {\r\n\r\n    /**\r\n     * 生命周期 - 加载之后\r\n     */\r\n    componentDidMount() {\r\n        if (this.props.onLoad) {\r\n            this.props.onLoad();\r\n        }\r\n    }\r\n\r\n    private getFilterDropdown(prop:object):ReactNode{\r\n        return (\r\n            <div style={{padding:8}}>\r\n                <Input\r\n                    style={{width:188,marginBottom:8,display:'block'}}\r\n                    value={this.props.condition.key}\r\n                    onChange={e=>this.props.onKeyChange(e.target.value)}\r\n                    onPressEnter={this.props.onSearch}\r\n                />\r\n                <Button\r\n                    type=\"primary\"\r\n                    icon={<SearchOutlined />}\r\n                    size=\"small\"\r\n                    style={{width:90,marginRight:8}}\r\n                    onClick={this.props.onSearch}\r\n                >\r\n                    搜索\r\n                </Button>\r\n                <Button\r\n                    size=\"small\"\r\n                    style={{width:90}}\r\n                    onClick={()=>{\r\n                        this.props.onKeyChange(\"\");\r\n                        this.props.onSearch()\r\n                    }}\r\n                >\r\n                    重置\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    /**\r\n     * 配置columns属性\r\n     * @ title  :string 名称\r\n     * @ dataIndex  :string 数据\r\n     * @ render  :function渲染\r\n     */\r\n    private getColumns(): ColumnsType<IMovie> {\r\n        return [\r\n            {\r\n                title: \"封面\",\r\n                dataIndex: \"poster\",\r\n                render(poster) {\r\n                    if (poster) {\r\n                        return (<img alt=\"\" className=\"tablePoster\" src={poster} />)\r\n                    } else {\r\n                        return (<img alt=\"\" className=\"tablePoster\" src={defaultImg} />)\r\n                    }\r\n                }\r\n            },\r\n            { \r\n                title: \"名称\", \r\n                dataIndex: \"name\",\r\n                filterDropdown:this.getFilterDropdown.bind(this),\r\n                filterIcon:<SearchOutlined />\r\n            },\r\n            {\r\n                title: \"类型\",\r\n                dataIndex: \"types\",\r\n                render(text: string[]) {\r\n                    return text.join(\"，\")\r\n                }\r\n            },\r\n            {\r\n                title: \"地区\",\r\n                dataIndex: \"areas\",\r\n                render(text: string[]) {\r\n                    return text.join(\"，\")\r\n                }\r\n            },\r\n            {\r\n                title: \"时长\",\r\n                dataIndex: \"timeLong\",\r\n                render(timeLong: string) {\r\n                    return `${timeLong}分钟`\r\n                }\r\n            },\r\n            {\r\n                title: \"是否热映\",\r\n                dataIndex: \"isHot\",\r\n                render: (isHot: boolean, record) => {\r\n                    return <Switch checked={isHot} onChange={(newVal) => {\r\n                        this.props.onSwitchChange(SwitchType.isHot, newVal, record._id!);\r\n                    }} />\r\n                }\r\n            },\r\n            {\r\n                title: \"即将上映\",\r\n                dataIndex: \"isComing\",\r\n                render: (isComing: boolean, record) => {\r\n                    return <Switch checked={isComing} onChange={(newVal) => {\r\n                        this.props.onSwitchChange(SwitchType.isComing, newVal, record._id!);\r\n                    }} />\r\n                }\r\n            },\r\n            {\r\n                title: \"经典影片\",\r\n                dataIndex: \"isClassic\",\r\n                render: (isClassic: boolean, record) => {\r\n                    return <Switch checked={isClassic} onChange={(newVal) => {\r\n                        this.props.onSwitchChange(SwitchType.isClassic, newVal, record._id!);\r\n                    }} />\r\n                }\r\n            },\r\n            {\r\n                title: \"操作\",\r\n                dataIndex: \"_id\",\r\n                render: (id) => {\r\n                    return (\r\n                        <div>\r\n                            <NavLink to={`/movie/edit/${id}`}>\r\n                                <Button type=\"primary\" size=\"small\">编辑</Button>\r\n                            </NavLink>\r\n                            <Popconfirm title=\"是否确定删除该影片？\" onConfirm={\r\n                                async ()=>{\r\n                                    await this.props.onDelete(id)\r\n                                    message.success(\"删除成功\")\r\n                                }} okText=\"确定\" cancelText=\"取消\">\r\n                            <Button type=\"text\" size=\"small\">删除</Button>\r\n                            </Popconfirm>\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n        ]\r\n    }\r\n\r\n    getPageConfig():TablePaginationConfig|false{\r\n        if(this.props.total === 0){\r\n            return false;\r\n        }\r\n        return {\r\n            current:this.props.condition.page,\r\n            pageSize:this.props.condition.limit,\r\n            total:this.props.total,\r\n        }\r\n    }\r\n\r\n    handleChange(pagination:TablePaginationConfig){\r\n        this.props.onChange(pagination.current!);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Table \r\n            rowKey=\"_id\" \r\n            dataSource={this.props.data} \r\n            columns={this.getColumns()}\r\n            pagination={this.getPageConfig()}\r\n            onChange={this.handleChange.bind(this)}\r\n            loading={this.props.isLoading}\r\n            ></Table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default table;","// action的创建函数\r\n\r\nimport { ISearchCondition, SwitchType } from \"../../services/CommonTypes\";\r\nimport { IMovie, MovieService } from \"../../services/MovieService\";\r\nimport { IAction } from \"./ActionTypes\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { IRootState } from \"../reducers/RootReducer\";\r\n/**\r\n * 根据IAction来制作类型SaveMoviesAction\r\n */\r\nexport type SaveMoviesAction = IAction<\"movie_save\", {\r\n    movies: IMovie[];\r\n    total: number;\r\n}>;\r\n/**\r\n * 保存电影数据\r\n * @param movies 电影数组 \r\n * @param total 电影总数\r\n */\r\nfunction saveMoviesAction(movies: IMovie[], total: number): SaveMoviesAction {\r\n    return {\r\n        type: \"movie_save\",\r\n        payload: {\r\n            movies,\r\n            total\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * 根据IAction来制作类型SaveLoadingAction\r\n */\r\nexport type SetLoadingAction = IAction<\"movie_setLoading\",boolean>;\r\n/**\r\n * 设置状态是否加载行为\r\n * @param isLoading 是否加载 \r\n */\r\nfunction setLoadingAction(isLoading:boolean):SetLoadingAction{\r\n    return {\r\n        type:\"movie_setLoading\",\r\n        payload: isLoading\r\n    }\r\n}\r\n\r\n/**\r\n * 根据IAction来制作类型SetConditionAction\r\n */\r\nexport type SetConditionAction = IAction<\"movie_setCondition\",ISearchCondition>\r\n/**\r\n * 设置查询条件行为\r\n * @param condition 查询条件\r\n */\r\nfunction setConditionAction(condition:ISearchCondition):SetConditionAction{\r\n    return {\r\n        type:\"movie_setCondition\",\r\n        payload:condition\r\n    }\r\n}\r\n\r\n/**\r\n * 根据IAction来制作类型DeleteAction\r\n */\r\nexport type DeleteAction = IAction<\"movie_delete\",string>\r\n\r\n/**\r\n * 删除电影行为\r\n * @param id 电影的_id属性\r\n */\r\nfunction deleteAction(id:string):DeleteAction{\r\n    return {\r\n        type:\"movie_delete\",\r\n        payload:id\r\n    }\r\n}\r\n/**\r\n * 根据IAction来制作类型MovieChangeSwitchAction\r\n */\r\nexport type MovieChangeSwitchAction = IAction<\"movie_switch\",{\r\n    type:SwitchType,\r\n    newVal:boolean,\r\n    id:string\r\n}>\r\n/**\r\n * 更改布尔值行为\r\n * @param type 目标类型\r\n * @param newVal 改变后的值\r\n * @param id 电影id\r\n */\r\nfunction changeSwitchAction(type:SwitchType,newVal:boolean,id:string):MovieChangeSwitchAction{\r\n    return {\r\n        type:\"movie_switch\",\r\n        payload:{\r\n            type,\r\n            newVal,\r\n            id\r\n        }\r\n    }\r\n}\r\n/**\r\n * 可辨识的联合\r\n */\r\nexport type MovieAction = MovieChangeSwitchAction|SaveMoviesAction|SetConditionAction|SetLoadingAction|DeleteAction\r\n\r\n// 副作用处理thunk\r\n/**\r\n * 副作用-通过条件从服务器中获取电影数组\r\n * @param condition 查询条件\r\n */\r\nfunction fetchMovie(condition:ISearchCondition)\r\n:ThunkAction<Promise<void>,IRootState,any,MovieAction>{\r\n    return async (dispatch,getState)=>{\r\n        // 1. 设置加载状态\r\n        dispatch(setLoadingAction(true));\r\n        // 2. 设置条件\r\n        dispatch(setConditionAction(condition));\r\n        // 3. 获取服务器数据\r\n        const curCondition = getState().movie.condition\r\n        const resp = await MovieService.get(curCondition)\r\n        // 4. 更改仓库数据\r\n        dispatch(saveMoviesAction(resp.data,resp.total))\r\n        // 5. 关闭加载状态\r\n        dispatch(setLoadingAction(false));\r\n    }\r\n}\r\n/**\r\n * 通过id删除电影\r\n * @param id 电影的_id\r\n */\r\nfunction deleteMovie(id:string)\r\n:ThunkAction<Promise<void>,IRootState,any,MovieAction>{\r\n    return async (dispatch)=>{\r\n        // 1. 设置加载状态\r\n        dispatch(setLoadingAction(true));\r\n        // 2. 删除数据\r\n        await MovieService.delete(id)\r\n        // 3. 更改仓库数据\r\n        dispatch(deleteAction(id))\r\n        // 4. 关闭加载状态\r\n        dispatch(setLoadingAction(false));\r\n    }\r\n}\r\n\r\nfunction changeSwitch(type:SwitchType,newVal:boolean,id:string)\r\n:ThunkAction<Promise<void>,IRootState,any,MovieAction>{\r\n    return async (dispatch)=>{\r\n        // 1. 设置加载状态\r\n        dispatch(setLoadingAction(true));\r\n        // 2. 更改仓库状态\r\n        dispatch(changeSwitchAction(type,newVal,id));\r\n        // 3. 在服务器中修改\r\n        await MovieService.edit(id,{\r\n            [type]:newVal\r\n        })\r\n        // 4. 关闭加载状态\r\n        dispatch(setLoadingAction(false));\r\n    }\r\n}\r\n\r\n\r\nexport default {\r\n    saveMoviesAction,\r\n    setLoadingAction,\r\n    setConditionAction,\r\n    deleteAction,\r\n    fetchMovie,\r\n    deleteMovie,\r\n    changeSwitch,\r\n    changeSwitchAction,\r\n\r\n};\r\n","import React, { Dispatch } from \"react\";\r\nimport MovieTable, { IMovieTableEvents} from \"../../components/MovieTable\";\r\nimport { connect } from \"react-redux\";\r\nimport { IRootState } from \"../../redux/reducers/RootReducer\";\r\nimport MovieAction from \"../../redux/actions/MovieAction\";\r\nimport { IMovieState } from \"../../redux/reducers/MovieReducer\";\r\n\r\n/**\r\n * react-redux的使用 \r\n * 1. 定义一个函数，返回电影状态\r\n * @param state 仓库的状态\r\n */\r\nfunction mapStateToProps(state:IRootState):IMovieState{\r\n    return state.movie;\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch:Dispatch<any>):IMovieTableEvents{\r\n    return {\r\n        onLoad(){\r\n            dispatch(MovieAction.fetchMovie({\r\n                page:1,\r\n                limit:10,\r\n                key:\"\"\r\n            }))\r\n        },\r\n        onSwitchChange(type, newState, id){\r\n            dispatch(MovieAction.changeSwitch(type,newState,id))\r\n        },\r\n        async onDelete(id){\r\n            dispatch(MovieAction.deleteMovie(id))\r\n        },\r\n        onChange(page){\r\n            dispatch(MovieAction.fetchMovie({\r\n                page,\r\n            }))\r\n        },\r\n        onKeyChange(key){\r\n            dispatch(MovieAction.setConditionAction({\r\n                key,\r\n            }))\r\n        },\r\n        onSearch(){\r\n            dispatch(MovieAction.fetchMovie({\r\n                // 细节搜索后需要会到第一页 否则容易出bug\r\n                page:1,\r\n            }))\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * react-redux的使用\r\n * 2. HOC高阶函数\r\n * @ 由react-redux返回的高阶函数\r\n * @ 传入组件然后返回一个新的组件\r\n */\r\nconst HOC = connect(mapStateToProps,mapDispatchToProps);\r\n/**\r\n * react-redux的使用\r\n * 3. 通过高阶函数HOC封装旧组件以及特定规则，然后返回新组件\r\n */\r\nconst MovieContainer = HOC(MovieTable);\r\n\r\nclass list extends React.Component {\r\n    render(){\r\n        return (\r\n            <MovieContainer/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default list;\r\n\r\n// 情形1 - 仓库里面有数据，但没有界面\r\n// 情形2 - MovieTable组件有界面，但是没有数据\r\n// 解决方法 - 使用react-redux库","import React from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport AddMovie from \"./movie/AddMovie\";\r\nimport EditMovie from \"./movie/EditMovie\";\r\nimport MovieList from \"./movie/MovieList\";\r\nimport { Layout,Menu } from \"antd\";\r\n\r\nconst {\r\n    Header, Sider, Content,\r\n} = Layout;\r\n\r\nconst _Layout: React.FC = function () {\r\n    return (\r\n        <div className=\"container\">\r\n            <Layout>\r\n                <Header className=\"header\">\r\n                    <NavLink to=\"/\">电影管理系统</NavLink>\r\n                </Header>\r\n                <Layout>\r\n                    <Sider>\r\n                        <Menu\r\n                            mode=\"inline\"\r\n                            theme=\"dark\"\r\n                        >\r\n                            <Menu.Item key=\"1\">\r\n                                <NavLink to=\"/movie\">电影列表</NavLink>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"2\">\r\n                                <NavLink to=\"/movie/add\">添加电影</NavLink>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </Sider>\r\n                    <Content>\r\n                        <div className=\"main\">\r\n                            <Route path=\"/\" component={Home} exact={true}></Route>\r\n                            <Route path=\"/movie\" component={MovieList} exact={true}></Route>\r\n                            <Route path=\"/movie/add\" component={AddMovie}></Route>\r\n                            <Route path=\"/movie/edit/:id\" component={EditMovie}></Route>\r\n                        </div>\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default _Layout;","// 描述电影列表的状态类型\r\n\r\nimport { Reducer } from \"react\";\r\nimport { ISearchCondition } from \"../../services/CommonTypes\";\r\nimport { IMovie } from \"../../services/MovieService\";\r\nimport { DeleteAction, MovieAction, MovieChangeSwitchAction, SaveMoviesAction, SetConditionAction, SetLoadingAction } from \"../actions/MovieAction\";\r\n\r\n\r\nexport type IMovieCondition = Required<ISearchCondition>;\r\n\r\n/**\r\n * 电影状态\r\n */\r\nexport interface IMovieState {\r\n    /**\r\n     * 电影数组\r\n     */\r\n    data: IMovie[];\r\n    /**\r\n     * 查询条件\r\n     */\r\n    condition: IMovieCondition;\r\n    /**\r\n     * 总记录数\r\n     */\r\n    total: number;\r\n    /**\r\n     * 是否正在加载数据\r\n     */\r\n    isLoading: boolean;\r\n    /**\r\n     * 总页数\r\n     */\r\n    totalPage:number;\r\n\r\n}\r\n\r\n/**\r\n * 默认状态\r\n */\r\nconst defaultState: IMovieState = {\r\n    data: [],\r\n    condition: {\r\n        page: 1,\r\n        limit: 10,\r\n        key: \"\"\r\n    },\r\n    total: 0,\r\n    isLoading: false,\r\n    totalPage:0\r\n};\r\n/**\r\n * Reducer:<S,A>=>S\r\n */\r\ntype MovieReducer<T> = Reducer<IMovieState,T>\r\n\r\n\r\nconst saveMovie:MovieReducer<SaveMoviesAction> = function (state,action){\r\n    // ES5\r\n    // return Object.assign({},state,{\r\n    //     data:action.payload.movies,\r\n    //     total:action.payload.total\r\n    // })\r\n    // ES6\r\n    return {\r\n        ...state,\r\n        data:action.payload.movies,\r\n        total:action.payload.total,\r\n        totalPage:Math.ceil(action.payload.total/state.condition.limit)\r\n    }\r\n}\r\n\r\nconst setCondition:MovieReducer<SetConditionAction> = function(state,action){\r\n    const newState =  {\r\n        ...state,\r\n        condition:{\r\n            ...state.condition,\r\n            ...action.payload\r\n        },\r\n    };\r\n    newState.totalPage = Math.ceil(newState.total/newState.condition.limit)\r\n    return newState;\r\n}\r\n\r\nconst setLoading:MovieReducer<SetLoadingAction> = function(state,action){\r\n    return {\r\n        ...state,\r\n        isLoading:action.payload\r\n    }\r\n}\r\n\r\nconst deleteMovie:MovieReducer<DeleteAction> = function (state,action){\r\n    return {\r\n        ...state,\r\n        data:state.data.filter(m=>m._id !== action.payload),\r\n        total:state.total - 1,\r\n        totalPage:Math.ceil((state.total - 1)/state.condition.limit)\r\n    }\r\n}\r\n\r\nconst changeSwitch:MovieReducer<MovieChangeSwitchAction> = function (state,action){\r\n    // 1. 根据id找到对象\r\n    const movie = state.data.find(d=>d._id === action.payload.id);\r\n    if(!movie){\r\n        return state;\r\n    }\r\n    // 2. 对象克隆\r\n    const newMovie = {...movie};\r\n    // 3. 更新数据\r\n    newMovie[action.payload.type] = action.payload.newVal;\r\n    // 4. 将对象重新放入数组中\r\n    const newData = state.data.map(d=>{\r\n        if(d._id === action.payload.id){\r\n            return newMovie;\r\n        }\r\n        return d;\r\n    })\r\n    return {\r\n        ...state,\r\n        data:newData\r\n    }\r\n}\r\n\r\n/**\r\n * 根据行为的类型进行不同对状态的操作\r\n * @param state 状态\r\n * @param action 行为\r\n */\r\nexport default function (state: IMovieState = defaultState, action: MovieAction) {\r\n    // 可辨识联合\r\n    switch (action.type) {\r\n        case \"movie_delete\":\r\n            return deleteMovie(state,action);\r\n            \r\n        case \"movie_save\":\r\n            return saveMovie(state,action);\r\n            \r\n        case \"movie_setCondition\":\r\n            return setCondition(state,action);\r\n            \r\n        case \"movie_setLoading\":\r\n            return setLoading(state,action);\r\n        case \"movie_switch\":\r\n            return changeSwitch(state,action)\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport movie, { IMovieState } from \"./MovieReducer\";\r\n\r\n/**\r\n * 整个网站的根状态\r\n */\r\nexport interface IRootState {\r\n    movie:IMovieState,\r\n\r\n}\r\n\r\n/**\r\n * 利用redux中的combineReducers方法来合并Reducer\r\n */\r\nexport const rootReducer = combineReducers({\r\n    movie,\r\n    \r\n})","// 仓库\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport { IRootState, rootReducer } from \"./reducers/RootReducer\";\r\nimport logger from \"redux-logger\";\r\nimport thunk, { ThunkMiddleware } from \"redux-thunk\";\r\n/**\r\n * 利用redux中的createStore创建一个仓库\r\n * @ 参数rootReducer\r\n * @ 中间件redux-logger\r\n */\r\nexport const store = createStore(\r\n    rootReducer,\r\n    // thunk写在前面，logger写在最后\r\n    // 由于redux不能准确把握中间件的类型检查，容易使分发时类型不匹配\r\n    // - 直接用类型断言as any\r\n    // - 在定义中间件时使用泛型，thunk自己定义了一个中间件类型ThunkMiddleware\r\n    applyMiddleware(thunk as ThunkMiddleware<IRootState>,logger)\r\n    );","import React from 'react';\nimport _Layout from './pages/Layout';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\"\n\n// BrowserRouter\n// - Route设置路由 （path设置路径 component设置路由组件）\n// Provider \n// - react-redux提供的数据包裹层\n// - 需要配置参数store\n\n// 函数组件\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Route path=\"/\" component={_Layout}></Route>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"antd/dist/antd.css\";\n\n// 被中间件redux-logger替代\n// store.subscribe(()=>{\n//   console.log(store.getState())\n// })\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// 界面\n// 库：antd\n// 引入css文件antd/dist/antd.css\n\n// 路由\n// 库A：react-router\n// 库B：react-router-dom\n\n// redux 状态管理\n// 大型项目中使用\n// 不是所有的状态数据都需要放到redux中\n// action:平面对象，plain object，它描述了数据变化的方式\n// reducer:数据变化的具体内容，它需要一个action来触发\n// store：存储数据的仓库\n// store.subscribe可以使用中间件来处理redux-logger\n// 副作用：redux-thunk、redux-saga（最好，难度高）、dva（saga封装，脚手架）、umijs（dva延申）\n"],"sourceRoot":""}